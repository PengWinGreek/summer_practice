[
  {
    "problem": "Что такое последовательность?",
    "code_snippet": ""
  },
  {
    "problem": "Какие операции поддерживают большинство последовательностей?",
    "code_snippet": ""
  },
  {
    "problem": "Какие виды строк бывают в питоне?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли изменить отдельный символ внутри строки?",
    "code_snippet": ""
  },
  {
    "problem": "Как соединить список строк в одну? Как разбить строку на список строк?",
    "code_snippet": ""
  },
  {
    "problem": "Как кодировать и декодировать строки?",
    "code_snippet": ""
  },
  {
    "problem": "Чем список отличается от кортежа?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое диапазон?",
    "code_snippet": ""
  },
  {
    "problem": "Как сделать список уникальным (без повторяющихся элементов)?",
    "code_snippet": ""
  },
  {
    "problem": "Есть кортеж из трех элементов. Назначить переменным a, b, c его значения?",
    "code_snippet": ""
  },
  {
    "problem": "Как сравниваются последовательности?",
    "code_snippet": ""
  },
  {
    "problem": "Как понять хешируемый ли объект?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое множество?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего применяются множества?",
    "code_snippet": ""
  },
  {
    "problem": "Какие операции можно производить над множествами?",
    "code_snippet": ""
  },
  {
    "problem": "Как происходит проверка множеств на равенство?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое отображение?",
    "code_snippet": ""
  },
  {
    "problem": "Какие нюансы есть в использовании чисел как ключей?",
    "code_snippet": ""
  },
  {
    "problem": "Какие операции можно производить над отображениями?",
    "code_snippet": ""
  },
  {
    "problem": "Что возвращает метод items?",
    "code_snippet": ""
  },
  {
    "problem": "Как отсортировать список словарей по определенному полю?",
    "code_snippet": ""
  },
  {
    "problem": "Что может являться ключом словаря? Что не может? Почему?",
    "code_snippet": ""
  },
  {
    "problem": "Есть два списка – ключи и значения. Как составить из них словарь?",
    "code_snippet": ""
  },
  {
    "problem": "Как работает хэш-таблица?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое коллизия?",
    "code_snippet": ""
  },
  {
    "problem": "Где будет быстрее поиск, а где перебор и почему: dict, list, set, tuple?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое args, kwargs? В каких случаях они требуются?",
    "code_snippet": ""
  },
  {
    "problem": "Почему использовать изменяемые объекты как параметры по-умолчанию плохо? Приведите пример плохого случая. Как исправить?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли передавать функцию в качестве аргумента другой функции?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли объявлять функцию внутри другой функции? Где она будет видна?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое лямбды? Каковы их особенности?",
    "code_snippet": ""
  },
  {
    "problem": "Допустимы ли следующие выражения?",
    "code_snippet": ""
  },
  {
    "problem": "Как передаются значения аргументов в функцию или метод?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое замыкание?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое контейнер?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое итерабельный объект?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое итератор?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое генератор?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое генераторная функция?",
    "code_snippet": ""
  },
  {
    "problem": "Что делает yield?",
    "code_snippet": ""
  },
  {
    "problem": "В чем отличие [x for x in y] от (x for x in y)?",
    "code_snippet": ""
  },
  {
    "problem": "Что особенного в генераторе?",
    "code_snippet": ""
  },
  {
    "problem": "Как объявить генератор?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить из генератора список?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое подгенератор?",
    "code_snippet": ""
  },
  {
    "problem": "Какие методы есть у генераторов?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли извлечь элемент генератора по индексу?",
    "code_snippet": ""
  },
  {
    "problem": "Что возвращает итерация по словарю?",
    "code_snippet": ""
  },
  {
    "problem": "Как итерировать словарь по парам ключ-значение?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сопрограмма?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить список атрибутов объекта?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое магические методы, для чего нужны?",
    "code_snippet": ""
  },
  {
    "problem": "Как в классе сослаться на родительский класс?",
    "code_snippet": ""
  },
  {
    "problem": "Возможно ли множественное наследование?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое MRO?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Diamond problem?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое миксины?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое контекстный менеджер? Как написать свой?",
    "code_snippet": ""
  },
  {
    "problem": "Прокомментировать выражение?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое __slots__? Плюсы, минусы?",
    "code_snippet": ""
  },
  {
    "problem": "В чем смысл параметров _value, __value?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое __new__? И чем он отличается от __init__? В какой последовательности они выполняются?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое и чем отличается old-style от new-style classes?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое утиная типизация?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое модуль?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно получить имя модуля?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое модульное программирование?",
    "code_snippet": ""
  },
  {
    "problem": "Как Python ищет модули при импорте?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое пакет?",
    "code_snippet": ""
  },
  {
    "problem": "Что вы можете сказать о конструкции import package.item?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое обработка исключений?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего могут применять конструкцию try finally без except?",
    "code_snippet": ""
  },
  {
    "problem": "Как правильно по-разному обрабатывать исключения?",
    "code_snippet": ""
  },
  {
    "problem": "Что будет если ошибку не обработает блок except?",
    "code_snippet": ""
  },
  {
    "problem": "Что делать если нужно перехватить исключение, выполнить действия и опять возбудить это же исключение?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сцепление исключений?",
    "code_snippet": ""
  },
  {
    "problem": "Зачем нужен блок else?",
    "code_snippet": ""
  },
  {
    "problem": "Что можно передать в конструктор исключения?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть классы исключений?",
    "code_snippet": ""
  },
  {
    "problem": "В каких случаях можно обработать SyntaxError?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли создавать собственные исключения?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего нужны предупреждения (warnings) и как создать собственное?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего нужен модуль warnings?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое декораторы? Зачем нужны?",
    "code_snippet": ""
  },
  {
    "problem": "Что может быть декоратором? К чему может быть применен декоратор?",
    "code_snippet": ""
  },
  {
    "problem": "Что будет, если декоратор не возвращает ничего?",
    "code_snippet": ""
  },
  {
    "problem": "В чем отличие @foobar от @foobar()?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое фабрика декораторов?",
    "code_snippet": ""
  },
  {
    "problem": "Зачем нужен wraps?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое метаклассы?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое type? Как работает поиск метакласса при создании объекта?",
    "code_snippet": ""
  },
  {
    "problem": "Как работают метаклассы?",
    "code_snippet": ""
  },
  {
    "problem": "Зачем вообще использовать метаклассы?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое файловый объект?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть виды файловых объектов?",
    "code_snippet": ""
  },
  {
    "problem": "В чем отличие текстовых и бинарных файлов?",
    "code_snippet": ""
  },
  {
    "problem": "Как пользоваться функцией open?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего необходимо закрывать файлы?",
    "code_snippet": ""
  },
  {
    "problem": "Что делают методы tell и seek?",
    "code_snippet": ""
  },
  {
    "problem": "Что делают StringIO и BytesIO?",
    "code_snippet": ""
  },
  {
    "problem": "Являются ли файловые объекты контекстными менеджерами?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сериализация?",
    "code_snippet": ""
  },
  {
    "problem": "json.dumps / json.dump , json.loads / json.load?",
    "code_snippet": ""
  },
  {
    "problem": "Что делать если нужно сериализовать данные, которые не поддерживаются стандартным модулем json?",
    "code_snippet": ""
  },
  {
    "problem": "pickle.dumps / pickle.dump, pickle.loads / pickle.load?",
    "code_snippet": ""
  },
  {
    "problem": "Пирамида тестирования?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое mocking?",
    "code_snippet": ""
  },
  {
    "problem": "Что делать, если тестируемая функция использует удалённое подключение к внешним сервисам, которое иногда видает ошибку таймаута, 404 и им подобные?",
    "code_snippet": ""
  },
  {
    "problem": "Что делать, если тестируемая функция занимает много времени на выполнение повторяющихся операций внутри неё?",
    "code_snippet": ""
  },
  {
    "problem": "Какие вы знаете виды тестов?",
    "code_snippet": ""
  },
  {
    "problem": "Unit-тесты?",
    "code_snippet": ""
  },
  {
    "problem": "Интеграционные тесты (Integration tests)?",
    "code_snippet": ""
  },
  {
    "problem": "Функциональное тестирование?",
    "code_snippet": ""
  },
  {
    "problem": "Системный тест (System test, Service test)?",
    "code_snippet": ""
  },
  {
    "problem": "Проверка работоспособности (Smoke test, Sanity check)?",
    "code_snippet": ""
  },
  {
    "problem": "Регрессионное тестирование (Regression testing)?",
    "code_snippet": ""
  },
  {
    "problem": "Чем интеграционное тестирование отличается от функционального?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое функциональное программирование?",
    "code_snippet": ""
  },
  {
    "problem": "Как у Python с поддержкой функционального программирования?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое объект первого класса?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое функция высшего порядка?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое каррирование?",
    "code_snippet": ""
  },
  {
    "problem": "Опишите функции map, reduce, filter модуля functools?",
    "code_snippet": ""
  },
  {
    "problem": "Какие еще вы знаете функции из модуля functools?",
    "code_snippet": ""
  },
  {
    "problem": "Какие вы функции знаете из модуля itertools?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего нужен модуль operator?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое GIL? Какие у него есть проблемы?",
    "code_snippet": ""
  },
  {
    "problem": "Работали ли Вы с asyncio? В чём его особенность?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое async/await, для чего они нужны и как их использовать?",
    "code_snippet": ""
  },
  {
    "problem": "Как в питоне реализуется многопоточность? Какими модулями?",
    "code_snippet": ""
  },
  {
    "problem": "В чем отличие тредов от мультипроцессинга?",
    "code_snippet": ""
  },
  {
    "problem": "Какие задачи хорошо параллелятся, какие плохо?",
    "code_snippet": ""
  },
  {
    "problem": "Нужно посчитать 100 уравнений. Делать это в тредах или нет?",
    "code_snippet": ""
  },
  {
    "problem": "Треды в Питоне — это нативные треды или нет?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое гринлеты? Общее понятие? Примеры реализаций?",
    "code_snippet": ""
  },
  {
    "problem": "Какие варианты реализации шаблона Singleton на питоне?",
    "code_snippet": ""
  },
  {
    "problem": "Какие вы знаете инструменты для проверки кодстайл?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое list/dict comprehension?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между одинарным и двойным подчеркиванием?",
    "code_snippet": ""
  },
  {
    "problem": "Отличие copy() от deepcopy()?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое garbage collector? В чём его плюсы и минусы?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое интроспекция?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое рефлексия?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Middleware, для чего, как реализуется?",
    "code_snippet": ""
  },
  {
    "problem": "Назовите основные мидлвари? Зачем они нужны?",
    "code_snippet": ""
  },
  {
    "problem": "Опишите алгоритм работы CSRF middleware?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сигналы? Зачем нужны? Назовите основные?",
    "code_snippet": ""
  },
  {
    "problem": "Как реализуется связь m2m на уровне базы данных?",
    "code_snippet": ""
  },
  {
    "problem": "Чем лучше отправлять форму — GET или POST?",
    "code_snippet": ""
  },
  {
    "problem": "Как работает Serializer в Django REST Framework?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Meta в классах Django и для чего нужен?",
    "code_snippet": ""
  },
  {
    "problem": "За что отвечает Meta в сериализаторе?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница в быстродействии между django и Flask (и почему)?",
    "code_snippet": ""
  },
  {
    "problem": "Как в django работает система аутентификации?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое CGI? Плюсы, минусы?",
    "code_snippet": ""
  },
  {
    "problem": "Как защитить куки от воровства и от подделки?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между аутентификацией и авторизацией?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое XSS? Примеры? Как защитить приложение?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое REST?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое SOAP?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между REST и SOAP веб сервисами?",
    "code_snippet": ""
  },
  {
    "problem": "Можем ли мы посылать SOAP сообщения с вложением?",
    "code_snippet": ""
  },
  {
    "problem": "Как бы вы решили какой из REST или SOAP веб сервисов использовать?",
    "code_snippet": ""
  },
  {
    "problem": "Какие способы для мониторинга веб-приложений в production вы использовали или знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Как устроен протокол HTTP?",
    "code_snippet": ""
  },
  {
    "problem": "Написать raw запрос главной Яндекса?",
    "code_snippet": ""
  },
  {
    "problem": "Как клиенту понять, удался запрос или нет?",
    "code_snippet": ""
  },
  {
    "problem": "Что нужно отправить браузеру, чтобы перенаправить на другую страницу?",
    "code_snippet": ""
  },
  {
    "problem": "Как управлять кешированием в HTTP?",
    "code_snippet": ""
  },
  {
    "problem": "Как кэшируются файлы на уровне протокола?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое HTTP?",
    "code_snippet": ""
  },
  {
    "problem": "Чем отличаются HTTP и HTTPS?",
    "code_snippet": ""
  },
  {
    "problem": "Инкапсуляция?",
    "code_snippet": ""
  },
  {
    "problem": "Наследование?",
    "code_snippet": ""
  },
  {
    "problem": "Полиморфизм?",
    "code_snippet": ""
  },
  {
    "problem": "Абстракция?",
    "code_snippet": ""
  },
  {
    "problem": "KISS?",
    "code_snippet": ""
  },
  {
    "problem": "DRY?",
    "code_snippet": ""
  },
  {
    "problem": "YAGNI?",
    "code_snippet": ""
  },
  {
    "problem": "SLAP?",
    "code_snippet": ""
  },
  {
    "problem": "SOLID принципы?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое code cohesion & code coupling?",
    "code_snippet": ""
  },
  {
    "problem": "Абстрактная фабрика (Abstract factory)?",
    "code_snippet": ""
  },
  {
    "problem": "Построитель (Builder)?",
    "code_snippet": ""
  },
  {
    "problem": "Фабричный метод (Factory method)?",
    "code_snippet": ""
  },
  {
    "problem": "Прототип (Prototype)?",
    "code_snippet": ""
  },
  {
    "problem": "Одиночка (Singleton)?",
    "code_snippet": ""
  },
  {
    "problem": "Адаптер (Adapter)?",
    "code_snippet": ""
  },
  {
    "problem": "Мост (Bridge)?",
    "code_snippet": ""
  },
  {
    "problem": "Компоновщик (Composite)?",
    "code_snippet": ""
  },
  {
    "problem": "Декоратор (Decorator)?",
    "code_snippet": ""
  },
  {
    "problem": "Фасад (Facade)?",
    "code_snippet": ""
  },
  {
    "problem": "Приспособленец (Flyweight)?",
    "code_snippet": ""
  },
  {
    "problem": "Заместитель (Proxy)?",
    "code_snippet": ""
  },
  {
    "problem": "Цепочка ответственности (Chain of responsobility)?",
    "code_snippet": ""
  },
  {
    "problem": "Команда (Command)?",
    "code_snippet": ""
  },
  {
    "problem": "Интерпретатор (Interpreter)?",
    "code_snippet": ""
  },
  {
    "problem": "Итератор (Iterator)?",
    "code_snippet": ""
  },
  {
    "problem": "Посредник (Mediator)?",
    "code_snippet": ""
  },
  {
    "problem": "Хранитель (Memento)?",
    "code_snippet": ""
  },
  {
    "problem": "Наблюдатель (Observer)?",
    "code_snippet": ""
  },
  {
    "problem": "Состояние (State)?",
    "code_snippet": ""
  },
  {
    "problem": "Стратегия (Strategy)?",
    "code_snippet": ""
  },
  {
    "problem": "Шаблонный метод (Template method)?",
    "code_snippet": ""
  },
  {
    "problem": "Посетитель (Visitor)?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое lru cache?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое MQ?",
    "code_snippet": ""
  },
  {
    "problem": "Какие готовые реализации MQ вы знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое RPC?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое gPRC?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое рекурсия? Какие минусы, плюсы?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое хвостовая рекурсия?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно оптимизировать хвостовую рекурсию в Python?",
    "code_snippet": ""
  },
  {
    "problem": "О-большое при оценке сложности?",
    "code_snippet": ""
  },
  {
    "problem": "Простой поиск?",
    "code_snippet": ""
  },
  {
    "problem": "Бинарный поиск?",
    "code_snippet": ""
  },
  {
    "problem": "Рекурсивные алгоритмы?",
    "code_snippet": ""
  },
  {
    "problem": "Быстрая сортировка?",
    "code_snippet": ""
  },
  {
    "problem": "Граф?",
    "code_snippet": ""
  },
  {
    "problem": "Очередь и стек?",
    "code_snippet": ""
  },
  {
    "problem": "Дерево?",
    "code_snippet": ""
  },
  {
    "problem": "Поиск в ширину?",
    "code_snippet": ""
  },
  {
    "problem": "Алгоритм Дейкстры?",
    "code_snippet": ""
  },
  {
    "problem": "Жадные алгоритмы?",
    "code_snippet": ""
  },
  {
    "problem": "Как распознать NP-полную задачу?",
    "code_snippet": ""
  },
  {
    "problem": "Динамическое программирование?",
    "code_snippet": ""
  },
  {
    "problem": "Алгоритм k ближайших соседей?",
    "code_snippet": ""
  },
  {
    "problem": "Алгоритм Ричарда Фейнмана?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое куки? Зачем они, как с ними работать и где они сохраняются?",
    "code_snippet": ""
  },
  {
    "problem": "Может ли сервер изменить (добавить, удалить) куки?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое JWT (JSON Web Token)?",
    "code_snippet": ""
  },
  {
    "problem": "Agile/Scrum?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между CI и CD?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между Scrum и Kanban?",
    "code_snippet": ""
  },
  {
    "problem": "Вопрос для тим-лидов: что Вы будете делать, если на проекте нет тестов и заказчик не хочет тратить на их разработку время и деньги?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Code Debt и как с ним быть?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Git Flow?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Git Rebase?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Git Cherry pick?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое force push?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое pre-commit check?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое транзакция? Какие у неё есть свойства?",
    "code_snippet": ""
  },
  {
    "problem": "Какие команды управления транзакциями вы знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое уровни изолированности транзакций? Какие они бывают?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое вложенные транзакции?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое курсор и зачем он нужен?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между PostgreSQL и MySQL?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое VACUUM в PostgreSQL?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое EXPLAIN? Какая разница между ним и EXPLAIN ANALYZE?",
    "code_snippet": ""
  },
  {
    "problem": "Какие виды Join'ов вы знаете, чем они отличаются друг от друга?",
    "code_snippet": ""
  },
    {
        "problem": "В чем разница между кортежем (tuple) и списком (list)?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое словарь (dict) и каково его основное ограничение?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое \"вызываемый объект\" (callable) в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Используя генератор списка, выведите нечетные числа от 0 до 100.",
        "code_snippet": ""
    },
    {
        "problem": "Что такое упаковка (pickling) и распаковка (unpickling)?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое генератор (generator)?",
        "code_snippet": ""
    },
    {
        "problem": "Объясните использование декораторов.",
        "code_snippet": ""
    },
    {
        "problem": "Напишите простой декоратор.",
        "code_snippet": ""
    },
    {
        "problem": "Предположим, lst = [2, 33, 222, 14, 25]. Что вернет lst[-1]?",
        "code_snippet": ""
    },
    {
        "problem": "Дан список lst = [1, 2, 3, 4, 4, 6, 7, 3, 4, 5, 2, 7], верните только уникальные значения из списка.",
        "code_snippet": ""
    },
    {
        "problem": "Что такое lambda-функция?",
        "code_snippet": ""
    },
    {
        "problem": "Объясните *args и **kwargs",
        "code_snippet": ""
    },
    {
        "problem": "Является ли этот код валидным в Python и почему?",
        "code_snippet": "def my_function():\n    print(my_function.what)\nmy_function.what = \"right?\"\nmy_function() # Prints \"right?\""
    },
    {
        "problem": "Даны переменные a и b, поменяйте их значения местами так, чтобы b получило значение a, а a получило значение b без использования промежуточной переменной.",
        "code_snippet": ""
    },
    {
        "problem": "Как выполнить операцию XOR в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое интроспекция/рефлексия и поддерживает ли это Python?",
        "code_snippet": ""
    },
    {
        "problem": "Одна особенность Python OOP заключается в том, что он не поддерживает истинно приватные атрибуты/методы. Как мы обходим это ограничение?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое Mixin?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое метакласс?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое Dunder/Magic/Special методы в Python? Назовите несколько.",
        "code_snippet": ""
    },
    {
        "problem": "Что такое PEP8?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое pip?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое CheeseShop?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое virtualenv?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое модули и пакеты в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Бонусный вопрос: Табы или пробелы?",
        "code_snippet": ""
    },
    {
        "problem": "Какие существуют способы передачи аргументов в функцию по ссылке в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Какие команды используются для копирования объектов в Python?",
        "code_snippet": ""
    },
    {
        "problem": "В чем разница между глубоким (deep) и поверхностным (shallow) копированием?",
        "code_snippet": ""
    },
    {
        "problem": "Напишите программу для определения имени объекта в Python.",
        "code_snippet": ""
    },
    {
        "problem": "Как используются тернарные операторы в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как преобразовать строку в число?",
        "code_snippet": ""
    },
    {
        "problem": "Какова функция отрицательного индекса?",
        "code_snippet": ""
    },
    {
        "problem": "Напишите программу для проверки принадлежности объекта классу или его подклассу.",
        "code_snippet": ""
    },
    {
        "problem": "Объясните делегирование в Python.",
        "code_snippet": ""
    },
    {
        "problem": "Какова функция 'self' в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как явно определяется 'self' в методе?",
        "code_snippet": ""
    },
    {
        "problem": "Какой процесс компиляции и связывания в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как извлекаются значения из объектов в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как сделать скрипт исполняемым в Unix?",
        "code_snippet": ""
    },
    {
        "problem": "Как используется мутация глобальных значений для потокобезопасности?",
        "code_snippet": ""
    },
    {
        "problem": "Напишите программу для чтения и записи бинарных данных в Python.",
        "code_snippet": ""
    },
    {
        "problem": "Как запустить подпроцесс с каналами, соединяющими ввод и вывод?",
        "code_snippet": ""
    },
    {
        "problem": "Какие существуют способы генерации случайных чисел?",
        "code_snippet": ""
    },
    {
        "problem": "Напишите программу, демонстрирующую шаблон Singleton в Python.",
        "code_snippet": ""
    },
    {
        "problem": "Что выведет следующий код и почему?",
        "code_snippet": "def extendList(val, list=[]):\n    list.append(val)\n    return list\nlist1 = extendList(10)\nlist2 = extendList(123,[])\nlist3 = extendList('a')\nprint \"list1 = %s\" % list1\nprint \"list2 = %s\" % list2\nprint \"list3 = %s\" % list3"
    },
    {
        "problem": "Что выведет следующий код и почему?",
        "code_snippet": "def multipliers():\n  return [lambda x : i * x for i in range(4)]\nprint [m(2) for m in multipliers()]"
    },
    {
        "problem": "Что выведет следующий код и почему?",
        "code_snippet": "class Parent(object):\n    x = 1\nclass Child1(Parent):\n    pass\nclass Child2(Parent):\n    pass\nprint Parent.x, Child1.x, Child2.x\nChild1.x = 2\nprint Parent.x, Child1.x, Child2.x\nParent.x = 3\nprint Parent.x, Child1.x, Child2.x"
    },
    {
        "problem": "Что выведет следующий код в Python 2 и как изменится ответ в Python 3?",
        "code_snippet": "def div1(x,y):\n    print \"%s/%s = %s\" % (x, y, x/y)\ndef div2(x,y):\n    print \"%s//%s = %s\" % (x, y, x//y)\ndiv1(5,2)\ndiv1(5.,2)\ndiv2(5,2)\ndiv2(5.,2.)"
    },
    {
        "problem": "Что выведет следующий код?",
        "code_snippet": "list = ['a', 'b', 'c', 'd', 'e']\nprint list[10:]"
    },
    {
        "problem": "Что выведет следующий код на строках 2, 4, 6 и 8?",
        "code_snippet": "1. list = [ [ ] ] * 5\n2. list  # output?\n3. list[0].append(10)\n4. list  # output?\n5. list[1].append(20)\n6. list  # output?\n7. list.append(30)\n8. list  # output?"
    },
    {
        "problem": "Как с помощью одного генератора списка создать новый список, содержащий только четные числа с четными индексами из исходного списка?",
        "code_snippet": ""
    },
    {
        "problem": "Будет ли работать следующий код? Почему?\nclass DefaultDict(dict):\n  def __missing__(self, key):\n    return []\nd = DefaultDict()\nd['florp'] = 127",
        "code_snippet": "class DefaultDict(dict):\n  def __missing__(self, key):\n    return []\nd = DefaultDict()\nd['florp'] = 127"
    },
    {
        "problem": "Как бы вы протестировали следующий асинхронный код?\nasync def logs(cont, name):\n    conn = aiohttp.UnixConnector(path=\"/var/run/docker.sock\")\n    async with aiohttp.ClientSession(connector=conn) as session:\n        async with session.get(f\"http://xx/containers/{cont}/logs?follow=1&stdout=1\") as resp:\n            async for line in resp.content:\n                print(name, line)",
        "code_snippet": "async def logs(cont, name):\n    conn = aiohttp.UnixConnector(path=\"/var/run/docker.sock\")\n    async with aiohttp.ClientSession(connector=conn) as session:\n        async with session.get(f\"http://xx/containers/{cont}/logs?follow=1&stdout=1\") as resp:\n            async for line in resp.content:\n                print(name, line)"
    },
    {
        "problem": "Как перечислить функции в модуле?",
        "code_snippet": ""
    },
    {
        "problem": "Напишите функцию, которая выводит наименьшее целое число, отсутствующее в списке и не представимое суммой подэлементов списка.",
        "code_snippet": ""
    },
    {
        "problem": "Что такое Python?",
        "code_snippet": ""
    },
    {
        "problem": "Опишите некоторые особенности Python.",
        "code_snippet": ""
    },
    {
        "problem": "Как Python выполняет код?",
        "code_snippet": ""
    },
    {
        "problem": "Какие встроенные типы есть в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое связывания (bindings) в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как создать список?",
        "code_snippet": ""
    },
    {
        "problem": "Как создать словарь?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое генератор списка? Зачем он нужен?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое генератор? Для чего он может использоваться?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое наследование?",
        "code_snippet": ""
    },
    {
        "problem": "Что произойдет, если в __init__ будет ошибка?",
        "code_snippet": ""
    },
    {
        "problem": "Что произойдет в Python при делении на ноль?",
        "code_snippet": ""
    },
    {
        "problem": "Как улучшить следующий код?\nimport string\ni = 0\nfor letter in string.letters:\n    print(\"The letter at index %i is %s\" % (i, letter))\n    i = i + 1",
        "code_snippet": "import string\nfor i, letter in enumerate(string.letters):\n    print(\"The letter at index {} is {}\".format(i, letter))"
    },
    {
        "problem": "Как вернуть несколько значений из функции/метода?",
        "code_snippet": ""
    },
    {
        "problem": "Какой самый быстрый способ поменять значения двух переменных местами?",
        "code_snippet": ""
    },
    {
        "problem": "Какова важность подсчета ссылок?",
        "code_snippet": ""
    },
    {
        "problem": "Возвращают ли функции (или методы) что-то, даже если нет оператора return? Если да, то что?",
        "code_snippet": ""
    },
    {
        "problem": "Как перевернуть список? Назовите хотя бы три способа.",
        "code_snippet": ""
    },
    {
        "problem": "Как бы вы объединили два отсортированных списка? Они могут быть любой длины или пустыми.",
        "code_snippet": ""
    },
    {
        "problem": "Как бы вы подсчитали строки в файле? Как бы вы сделали это, если файл слишком велик для хранения в памяти?",
        "code_snippet": ""
    },
  {
    "problem": "Есть ли отладчик на уровне исходного кода с точками останова, пошаговым выполнением и т.д.?",
    "code_snippet": ""
  },
  {
    "problem": "Есть ли инструмент для поиска ошибок или выполнения статического анализа?",
    "code_snippet": ""
  },
  {
    "problem": "Как я могу создать автономный исполняемый файл из скрипта Python?",
    "code_snippet": ""
  },
  {
    "problem": "Есть ли стандарты кодирования или руководство по стилю для программ Python?",
    "code_snippet": ""
  },
  {
    "problem": "Моя программа работает слишком медленно. Как я могу ускорить ее?",
    "code_snippet": ""
  },
  {
    "problem": "Почему я получаю UnboundLocalError, когда переменная имеет значение?",
    "code_snippet": ""
  },
  {
    "problem": "Каковы правила для локальных и глобальных переменных в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Почему лямбды, определенные в цикле с разными значениями, возвращают один и тот же результат?",
    "code_snippet": ""
  },
  {
    "problem": "Как я могу использовать глобальные переменные в нескольких модулях?",
    "code_snippet": ""
  },
  {
    "problem": "Каковы \"лучшие практики\" использования импорта в модуле?",
    "code_snippet": ""
  },
  {
    "problem": "Почему значения по умолчанию разделяются между объектами?",
    "code_snippet": ""
  },
  {
    "problem": "Как я могу передать необязательные или именованные параметры из одной функции в другую?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между аргументами и параметрами?",
    "code_snippet": ""
  },
  {
    "problem": "Почему изменение списка 'y' также изменило список 'x'?",
    "code_snippet": ""
  },
  {
    "problem": "Как написать функцию с выходными параметрами (вызов по ссылке)?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать функцию высшего порядка в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как скопировать объект в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как мой код может узнать методы или атрибуты объекта?",
    "code_snippet": ""
  },
  {
    "problem": "Как мой код может узнать имя объекта?",
    "code_snippet": ""
  },
  {
    "problem": "Что не так с приоритетом оператора запятой?",
    "code_snippet": ""
  },
  {
    "problem": "Есть ли эквивалент тернарного оператора \"?:\" из C?",
    "code_snippet": ""
  },
  {
    "problem": "Возможно ли писать запутанные однострочники в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как указать шестнадцатеричные и восьмеричные целые числа?",
    "code_snippet": ""
  },
  {
    "problem": "Почему -22 // 10 возвращает -3?",
    "code_snippet": ""
  },
  {
    "problem": "Как преобразовать строку в число?",
    "code_snippet": ""
  },
  {
    "problem": "Как преобразовать число в строку?",
    "code_snippet": ""
  },
  {
    "problem": "Как изменить строку на месте?",
    "code_snippet": ""
  },
  {
    "problem": "Как использовать строки для вызова функций/методов?",
    "code_snippet": ""
  },
  {
    "problem": "Есть ли эквивалент Perl-функции chomp() для удаления завершающих символов новой строки из строк?",
    "code_snippet": ""
  },
  {
    "problem": "Есть ли эквивалент scanf() или sscanf()?",
    "code_snippet": ""
  },
  {
    "problem": "Что означает 'UnicodeError: ASCII [decoding,encoding] error: ordinal not in range(128)'?",
    "code_snippet": ""
  },
  {
    "problem": "Как конвертировать между кортежами и списками?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое отрицательный индекс?",
    "code_snippet": ""
  },
  {
    "problem": "Как перебирать последовательность в обратном порядке?",
    "code_snippet": ""
  },
  {
    "problem": "Как удалить дубликаты из списка?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать массив в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать многомерный список?",
    "code_snippet": ""
  },
  {
    "problem": "Как применить метод к последовательности объектов?",
    "code_snippet": ""
  },
  {
    "problem": "Почему a_tuple[i] += ['item'] вызывает исключение, хотя сложение работает?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить словарь, который отображает ключи в постоянном порядке?",
    "code_snippet": ""
  },
  {
    "problem": "Я хочу выполнить сложную сортировку: можно ли сделать преобразование Шварца в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как отсортировать один список по значениям из другого списка?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое класс?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое метод?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое self?",
    "code_snippet": ""
  },
  {
    "problem": "Как проверить, является ли объект экземпляром данного класса или его подкласса?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое делегирование?",
    "code_snippet": ""
  },
  {
    "problem": "Как вызвать метод, определенный в базовом классе, из производного класса, который его переопределяет?",
    "code_snippet": ""
  },
  {
    "problem": "Как организовать код, чтобы было легче изменить базовый класс?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать статические данные класса и статические методы класса?",
    "code_snippet": ""
  },
  {
    "problem": "Как перегрузить конструкторы (или методы) в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Я пытаюсь использовать __spam и получаю ошибку о _SomeClassName__spam.",
    "code_snippet": ""
  },
  {
    "problem": "Мой класс определяет __del__, но он не вызывается, когда я удаляю объект.",
    "code_snippet": ""
  },
  {
    "problem": "Как получить список всех экземпляров данного класса?",
    "code_snippet": ""
  },
  {
    "problem": "Почему результат id() кажется неуникальным?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать файл .pyc?",
    "code_snippet": ""
  },
  {
    "problem": "Как найти имя текущего модуля?",
    "code_snippet": ""
  },
  {
    "problem": "Как иметь модули, которые взаимно импортируют друг друга?",
    "code_snippet": ""
  },
  {
    "problem": "__import__('x.y.z') возвращает <module 'x'>; как получить z?",
    "code_snippet": ""
  },
  {
    "problem": "Когда я редактирую импортированный модуль и переимпортирую его, изменения не отображаются. Почему это происходит?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое декораторы Python и как их использовать?",
    "code_snippet": ""
  },
  {
    "problem": "Как настроить множество проектов, где каждый использует разные версии Python и сторонних библиотек?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое PEP8 и следуете ли вы его рекомендациям при кодировании?",
    "code_snippet": ""
  },
  {
    "problem": "Как передаются аргументы - по ссылке или по значению?",
    "code_snippet": ""
  },
  {
    "problem": "Знаете ли вы, что такое списковые и словарные включения? Можете привести пример?",
    "code_snippet": ""
  },
  {
    "problem": "Покажите три разных способа получения каждого третьего элемента в списке",
    "code_snippet": ""
  },
  {
    "problem": "Знаете ли вы разницу между списками и кортежами? Можете привести пример их использования?",
    "code_snippet": ""
  },
  {
    "problem": "Знаете ли вы разницу между range и xrange?",
    "code_snippet": ""
  },
  {
    "problem": "Назовите несколько различий между Python 2.x и 3.x?",
    "code_snippet": ""
  },
  {
    "problem": "Оператор with и его использование.",
    "code_snippet": ""
  },
  {
    "problem": "Как избежать циклических импортов, не прибегая к импортам в функциях?",
    "code_snippet": ""
  },
  {
    "problem": "Что не так с импортом всех (import all)?",
    "code_snippet": ""
  },
  {
    "problem": "Почему GIL важен?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое \"специальные\" методы (<foo>), как они работают и т.д.",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли манипулировать функциями как объектами первого класса?",
    "code_snippet": ""
  },
  {
    "problem": "Разница между \"class Foo\" и \"class Foo(object)\"",
    "code_snippet": ""
  },
  {
    "problem": "Как прочитать файл размером 8 ГБ в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что вам не нравится в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли преобразовать ASCII-символы в целое число без использования встроенных методов, таких как string.atoi или int()?",
    "code_snippet": ""
  },
  {
    "problem": "Используете ли вы табуляции или пробелы, какие из них лучше?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Python? Каковы преимущества использования Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое PEP 8?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое pickling и unpickling?",
    "code_snippet": ""
  },
  {
    "problem": "Как интерпретируется Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как управляется память в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Какие инструменты помогают найти ошибки или выполнить статический анализ?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое декораторы Python?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между списком и кортежем?",
    "code_snippet": ""
  },
  {
    "problem": "Как передаются аргументы - по значению или по ссылке?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое включения словарей и списков?",
    "code_snippet": ""
  },
  {
    "problem": "Какие встроенные типы предоставляет Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните пространство имен в Python",
    "code_snippet": ""
  },
  {
    "problem": "Что такое lambda в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Почему формы lambda в Python не имеют операторов?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните pass в Python",
    "code_snippet": ""
  },
  {
    "problem": "Что такое итераторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое unittest в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните срезы в Python",
    "code_snippet": ""
  },
  {
    "problem": "Что такое генераторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое строка документации (docstring) в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как скопировать объект в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое отрицательный индекс в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как преобразовать число в строку?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между xrange и range?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое модуль и пакет в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Каковы правила для локальных и глобальных переменных в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно использовать глобальные переменные в нескольких модулях?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как сделать скрипт Python исполняемым в Unix?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как удалить файл в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как сгенерировать случайные числа в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить доступ к модулю, написанному на Python, из C?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используется оператор // в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Назовите пять преимуществ использования Python",
    "code_snippet": ""
  },
  {
    "problem": "Упомяните использование функции split в Python",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между Django, Pyramid и Flask?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните Flask и его преимущества",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Flask-WTF и каковы его особенности?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как обычно работает скрипт Flask?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как получить доступ к сеансам в Flask?",
    "code_snippet": ""
  },
  {
    "problem": "Является ли Flask моделью MVC, и если да, приведите пример, показывающий шаблон MVC для вашего приложения?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните подключение к базе данных в Python Flask?",
    "code_snippet": ""
  },
  {
    "problem": "Если у вас есть несколько серверов Memcache, и один из них, содержащий данные, выходит из строя, будет ли предпринята попытка получить эти данные?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как можно минимизировать простои серверов Memcached в вашей разработке на Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, что такое эффект Dogpile? Как можно предотвратить этот эффект?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как не следует использовать memcached в вашем проекте на Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое оператор If в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните цикл While в Python на примере",
    "code_snippet": ""
  },
  {
    "problem": "Что такое enumerate() в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно использовать цикл for для повторения одного и того же оператора снова и снова?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сопоставление кортежей в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните словарь в Python на примере",
    "code_snippet": ""
  },
  {
    "problem": "Как можно скопировать весь словарь в новый словарь?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно обновить словарь в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример метода items() для словаря",
    "code_snippet": ""
  },
  {
    "problem": "Как можно отсортировать элементы в словаре Python?",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример методов len() и cmp() для словаря и списка",
    "code_snippet": ""
  },
  {
    "problem": "Какие существуют методы словаря?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните арифметические операторы на примере",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример логических операторов",
    "code_snippet": ""
  },
  {
    "problem": "Объясните операторы членства с примером",
    "code_snippet": ""
  },
  {
    "problem": "Напишите код для демонстрации приоритета операторов в Python",
    "code_snippet": ""
  },
  {
    "problem": "Объясните массивы в Python на примере",
    "code_snippet": ""
  },
  {
    "problem": "Как можно получить доступ к элементам массива?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно вставить элементы в массив?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно удалить элементы из массива?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно выполнить поиск и получить индекс значения в массиве?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно перевернуть массив в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример преобразования массива в Unicode",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример класса в Python",
    "code_snippet": ""
  },
  {
    "problem": "Объясните наследование на примере",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример конструкторов Python",
    "code_snippet": ""
  },
  {
    "problem": "Как можно получить доступ к значениям в строке?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните все строковые операторы с примером",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример функции sleep() в Python",
    "code_snippet": ""
  },
  {
    "problem": "Что такое метод timer в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример класса calendar",
    "code_snippet": ""
  },
  {
    "problem": "Объясните ZIP-файл Python на примере",
    "code_snippet": ""
  },
  {
    "problem": "Каковы распространенные примеры исключений в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните важные ошибки Python",
    "code_snippet": ""
  },
  {
    "problem": "Объясните JSON dumps() в Python с примером",
    "code_snippet": ""
  },
  {
    "problem": "Подробно объясните преобразование JSON в Python (декодирование) с примером",
    "code_snippet": ""
  },
  {
    "problem": "Напишите код для метода encode()",
    "code_snippet": ""
  },
  {
    "problem": "Напишите код на Python для массива в numpy для создания матрицы Python",
    "code_snippet": ""
  },
  {
    "problem": "Напишите код на Python для вычитания матриц",
    "code_snippet": ""
  },
  {
    "problem": "Напишите код для умножения матриц",
    "code_snippet": ""
  },
  {
    "problem": "Объясните срезы матрицы на примере",
    "code_snippet": ""
  },
  {
    "problem": "Напишите код на Python для нахождения среднего значения через цикл",
    "code_snippet": ""
  },
  {
    "problem": "Напишите код для подсчета элементов в списке",
    "code_snippet": "list1 = ['red', 'green', 'blue', 'orange', 'green', 'gray', 'green']"
  },
  {
    "problem": "Как можно подсчитать повторяющиеся элементы в заданном списке?",
    "code_snippet": "list1 = [2,3,4,3,10,3,5,6,3]"
  },
  {
    "problem": "Напишите код для получения индекса элемента в списке с использованием цикла for",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример использования type() в Python",
    "code_snippet": ""
  },
  {
    "problem": "Как можно печатать без новой строки в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как напечатать шаблон звездочки (*) без новой строки и пробела?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое __init__?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между массивами и списками в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как сделать Python-скрипт исполняемым в Unix?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое срезы (slicing) в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое docstring в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое юнит-тесты в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что делают break, continue и pass в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используется self в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое глобальные, защищенные и приватные атрибуты в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое модули и пакеты в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что делает pass в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Какие встроенные типы данных есть в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое списки и кортежи? В чем ключевое различие между ними?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое область видимости (Scope) в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое PEP 8 и почему это важно?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое интерпретируемый язык?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое язык с динамической типизацией?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Python? Каковы преимущества использования Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Dict и List comprehensions?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое декораторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое разрешение области видимости (Scope Resolution) в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое пространства имен (namespaces) в Python? Для чего они используются?",
    "code_snippet": ""
  },
  {
    "problem": "Как управляется память в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое lambda в Python? Для чего она используется?",
    "code_snippet": ""
  },
  {
    "problem": "Как удалить файл в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое отрицательные индексы и для чего они используются?",
    "code_snippet": ""
  },
  {
    "problem": "Что означают *args и **kwargs?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните функции split() и join() в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое итераторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как передаются аргументы в Python - по значению или по ссылке?",
    "code_snippet": ""
  },
  {
    "problem": "Как интерпретируется Python?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между .py и .pyc файлами?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используются функции help() и dir()?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое PYTHONPATH в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое генераторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое pickling и unpickling?",
    "code_snippet": ""
  },
    {
        "problem": "В чем разница между xrange и range в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как скопировать объект в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как проверить, является ли класс дочерним по отношению к другому классу?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое метод init в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как создать пустой класс в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как работают спецификаторы доступа в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как получить доступ к членам родительского класса в дочернем классе?",
        "code_snippet": ""
    },
    {
        "problem": "Как работает наследование в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как создать класс в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как получить элементы из серии A, которых нет в другой серии B?",
        "code_snippet": ""
    },
    {
        "problem": "Как удалить индексы, строки и столбцы из dataframe?",
        "code_snippet": ""
    },
    {
        "problem": "Как добавить новый столбец в pandas dataframe?",
        "code_snippet": ""
    },
    {
        "problem": "Как создать серию из словаря в pandas?",
        "code_snippet": ""
    },
    {
        "problem": "Как объединить разные pandas dataframes?",
        "code_snippet": ""
    },
    {
        "problem": "Как перевернуть массив numpy одной строкой кода?",
        "code_snippet": ""
    },
    {
        "problem": "Как найти ближайшее значение в заданном массиве numpy?",
        "code_snippet": ""
    },
    {
        "problem": "Как отсортировать массив по N-му столбцу?",
        "code_snippet": ""
    },
    {
        "problem": "Как прочитать CSV данные в массив NumPy?",
        "code_snippet": ""
    },

    {
        "problem": "Как эффективно загрузить данные из текстового файла?",
        "code_snippet": ""
    },
    {
        "problem": "Дан массив numpy и новый столбец. Как удалить второй столбец и заменить его новыми значениями?",
        "code_snippet": ""
    },
    {
        "problem": "Как создать 1D, 2D и 3D массивы в NumPy?",
        "code_snippet": ""
    },
    {
        "problem": "Какие преимущества у массивов NumPy перед списками Python?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое NumPy?",
        "code_snippet": ""
    },
    {
        "problem": "Как найти форму (shape) массива NumPy?",
        "code_snippet": ""
    },
    {
        "problem": "В чем разница между глубокой и поверхностной копией?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое основная (main) функция в Python и как ее вызвать?",
        "code_snippet": ""
    },
    {
        "problem": "Какие инструменты используются для поиска ошибок и статического анализа в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое PIP?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое PYTHONPATH?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое GIL (Global Interpreter Lock)?",
        "code_snippet": ""
    },
    {
        "problem": "В чем разница между pickling и unpickling?",
        "code_snippet": ""
    },
    {
        "problem": "Как проверить, что все символы строки являются буквенно-цифровыми?",
        "code_snippet": ""
    },
    {
        "problem": "Как генерировать случайные числа?",
        "code_snippet": ""
    },
    {
        "problem": "Что такое лямбда-функции?",
        "code_snippet": ""
    },
    {
        "problem": "Какие встроенные модули Python наиболее часто используются?",
        "code_snippet": ""
    },
    {
        "problem": "В чем разница между пакетом и модулем в Python?",
        "code_snippet": ""
    },
    {
        "problem": "Как получить доступ к данным из CSV файла, размещенного на Google Drive?",
        "code_snippet": ""
    },
    {
        "problem": "Как объединить два словаря с суммированием значений для одинаковых ключей?",
        "code_snippet": ""
    },
    {
        "problem": "Как преобразовать дату из формата yyyy-mm-dd в dd-mm-yyyy?",
        "code_snippet": ""
    },
    {
        "problem": "Как найти строку, где за буквой 'a' следует от 4 до 8 букв 'b'?",
        "code_snippet": ""
    },
    {
        "problem": "Как сложить два целых числа >0 без использования оператора сложения?",
        "code_snippet": ""
    },
    {
        "problem": "Как найти пары чисел в массиве, сумма которых равна заданному числу N?",
        "code_snippet": ""
    },
    {
        "problem": "Как подсчитать количество каждого символа в текстовом файле?",
        "code_snippet": ""
    },
    {
        "problem": "Как проверить, что все числа в последовательности уникальны?",
        "code_snippet": ""
    },
    {
        "problem": "Как написать функцию, принимающую переменное количество аргументов?",
        "code_snippet": ""
    },
  {
    "problem": "В чем разница между списком и кортежем в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Каковы ключевые особенности Python?",
    "code_snippet": ""
  },
  {
    "problem": "Python - это язык программирования или скриптовый язык?",
    "code_snippet": ""
  },
  {
    "problem": "Python - интерпретируемый язык. Объясните.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое PEP 8?",
    "code_snippet": ""
  },
  {
    "problem": "Каковы преимущества использования Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое пространства имен в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое декораторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое генераторы словарей и списков?",
    "code_snippet": ""
  },
  {
    "problem": "Какие встроенные типы данных есть в Python?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между файлами .py и .pyc?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое срезы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое ключевые слова в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое литералы в Python и объясните различные типы литералов?",
    "code_snippet": ""
  },
  {
    "problem": "Какие новые функции добавлены в версии Python 3.9.0.0?",
    "code_snippet": ""
  },
  {
    "problem": "Как управляется память в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое пространство имен в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое PYTHONPATH?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое модули в Python? Назовите некоторые часто используемые встроенные модули.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое локальные и глобальные переменные в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Чувствителен ли Python к регистру?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое преобразование типов в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как установить Python на Windows и установить переменную пути?",
    "code_snippet": ""
  },
  {
    "problem": "Требуется ли отступ в Python?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между массивами и списками в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое функции в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое __init__?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое лямбда-функция?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое self в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Каково использование ключевых слов Break, Continue и Pass в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что делает [::-1}?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно рандомизировать элементы списка в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое итераторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно генерировать случайные числа в Python?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между range и xrange?",
    "code_snippet": ""
  },
  {
    "problem": "Как писать комментарии в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое pickling и unpickling?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое генераторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как сделать первую букву строки заглавной?",
    "code_snippet": ""
  },
  {
    "problem": "Как преобразовать строку в нижний регистр?",
    "code_snippet": ""
  },
  {
    "problem": "Как комментировать несколько строк в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое docstrings в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Каково назначение операторов 'is', 'not' и 'in'?",
    "code_snippet": ""
  },
  {
    "problem": "Какова цель функций help() и dir() в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Почему при выходе из Python не вся память освобождается?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое словарь в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно использовать тернарные операторы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что означает *args, **kwargs? И зачем мы это используем?",
    "code_snippet": ""
  },
  {
    "problem": "Что делает len()?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните методы split(), sub(), subn() модуля 're' в Python.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое отрицательные индексы и зачем они используются?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое пакеты Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как удалять файлы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Какие бывают типы переменных в Python OOP?",
    "code_snippet": ""
  },
  {
    "problem": "Какие преимущества предлагают массивы NumPy по сравнению с (вложенными) списками Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как добавить значения в массив Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как удалить значения из массива Python?",
    "code_snippet": ""
  },
  {
    "problem": "Есть ли в Python концепции ООП?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между глубокой и поверхностной копией?",
    "code_snippet": ""
  },
  {
    "problem": "Как достигается многопоточность в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое процесс компиляции и связывания в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое библиотеки Python? Назовите несколько из них.",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используется split?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое изменяемые и неизменяемые типы данных?",
    "code_snippet": ""
  },
  {
    "problem": "Как используется блок try и except в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое упорядоченный словарь в Python?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между ключевыми словами 'return' и 'yield'?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между set() и frozenset()?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть способы поменять местами значения двух элементов?",
    "code_snippet": ""
  },
  {
    "problem": "Как импортировать модули в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните наследование в Python на примере.",
    "code_snippet": ""
  },
  {
    "problem": "Как создаются классы в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое monkey patching в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Поддерживает ли Python множественное наследование?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое полиморфизм в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Дайте определение инкапсуляции в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как выполняется абстракция данных в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Использует ли Python спецификаторы доступа?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать пустой класс в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Что делает функция object()?",
    "code_snippet": ""
  },
  {
    "problem": "Что вы знаете о Pandas в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Дайте определение DataFrame в Pandas?",
    "code_snippet": ""
  },
  {
    "problem": "Как объединить DataFrame в Pandas?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать Series из словаря в Pandas?",
    "code_snippet": ""
  },
  {
    "problem": "Как определить и обработать пропущенные значения в DataFrame?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое переиндексация в Pandas?",
    "code_snippet": ""
  },
  {
    "problem": "Как удалить строку или столбец из DataFrame в Pandas?",
    "code_snippet": ""
  },
  {
    "problem": "Как добавить новый столбец в DataFrame Pandas?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить элементы Series A, которых нет в другом Series B?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить элементы, которые не являются общими для двух заданных Series A и B?",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу на Python для выполнения алгоритма сортировки пузырьком.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу на Python для создания звездного треугольника.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу для генерации ряда Фибоначчи на Python.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу на Python для проверки, является ли число простым.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу на Python для проверки, является ли последовательность палиндромом.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите однострочный код, который подсчитывает количество заглавных букв в файле. Ваш код должен работать, даже если файл слишком большой для загрузки в память.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите алгоритм сортировки для числового набора данных в Python.",
    "code_snippet": ""
  },
  {
    "problem": "Каковы окончательные значения A0, A1, ...An в следующем коде?",
    "code_snippet": "A0 = dict(zip(('a','b','c','d','e'),(1,2,3,4,5)))\nA1 = range(10)\nA2 = sorted([i for i in A1 if i in A0])\nA3 = sorted([A0[s] for s in A0])\nA4 = [i for i in A1 if i in A3]\nA5 = {i:i*i for i in A1}\nA6 = [[i,i*i] for i in A1]\nprint(A0,A1,A2,A3,A4,A5,A6)"
  },
  {
    "problem": "Напишите программу на Python, чтобы определить, является ли заданное число четным или нечетным.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу для проверки, является ли заданное число числом Армстронга.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу на Python для расчета простого процента.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу на Python, чтобы проверить, является ли строка симметричной или палиндромом.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите программу на Python, чтобы найти даты вчера, сегодня и завтра.",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, что такое Flask и его преимущества?",
    "code_snippet": ""
  },
  {
    "problem": "Django лучше, чем Flask?",
    "code_snippet": ""
  },
  {
    "problem": "Назовите различия между Django, Pyramid и Flask.",
    "code_snippet": ""
  },
  {
    "problem": "Обсудите архитектуру Django.",
    "code_snippet": ""
  },
  {
    "problem": "Объясните, как можно настроить базу данных в Django.",
    "code_snippet": ""
  },
  {
    "problem": "Приведите пример, как можно написать VIEW в Django?",
    "code_snippet": ""
  },
  {
    "problem": "Из чего состоят шаблоны Django?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните использование сессии в Django framework?",
    "code_snippet": ""
  },
  {
    "problem": "Перечислите стили наследования в Django.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое NumPy в Python?",
    "code_snippet": ""
  },
  {
    "problem": "Как создать 1D, 2D и 3D массивы?",
    "code_snippet": ""
  },
  {
    "problem": "Как загрузить данные из текстового файла с помощью NumPy?",
    "code_snippet": ""
  },
  {
    "problem": "Как прочитать CSV данные в массив в NumPy?",
    "code_snippet": ""
  },
  {
    "problem": "Как перевернуть массив NumPy одной строкой кода?",
    "code_snippet": ""
  },
  {
    "problem": "Как сохранить изображение локально с помощью Python, если URL-адрес уже известен?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить возраст кэша Google для любого URL или веб-страницы?",
    "code_snippet": ""
  },
  {
    "problem": "Требуется собрать данные со страницы IMDb top 250 movies. Должны быть только поля: название фильма, год и рейтинг.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое функция map в Python?",
    "code_snippet": ""
  },
  {
    "problem": "NumPy лучше, чем списки?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить индексы N максимальных значений в массиве NumPy?",
    "code_snippet": ""
  },
  {
    "problem": "Как вычислить процентили с помощью Python/NumPy?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между NumPy и SciPy?",
    "code_snippet": ""
  },
  {
    "problem": "Как построить 3D графики/визуализации с помощью NumPy/SciPy?",
    "code_snippet": ""
  },
  {
  "problem": "Рассмотрим следующий Python-код. Каков будет его вывод?",
  "code_snippet": "gen = (x for x in [0, False, None, 1, 2, 0, 3])\n\nany(gen)\nprint(next(gen), end=\"\")\n\nall(gen)\nprint(next(gen), end=\"\")"
  },
  {
  "problem": "Рассмотрим следующий код. Каков будет его вывод?",
  "code_snippet": "class MyClass:\n    def init(self, x=0):\n        self.x = x\n    \n    def lt(self, other):\n        print(\"a\", end=\"\")\n        return NotImplemented\n    \n    def gt(self, other):\n        print(\"b\", end=\"\")\n        return self.x == other.x\n    \n    def le(self, other):\n        print(\"c\", end=\"\")\n        return NotImplemented\n    \n    def ge(self, other):\n        print(\"d\", end=\"\")\n        return self.x >= other.x\n    \nx = MyClass()\ny = MyClass()\n\nx <= y\nx < y"
  },
  {
  "problem": "Учитывая следующий код, что будет напечатано?",
  "code_snippet": "print(f\"{2.5:,.0f}, {3.5:,.0f}, {4.5:,.0f}, {999.5:,.0f}\")"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет выведено?",
  "code_snippet": "x = 1\ny = 1\nprint(x-----y)"
  },
  {
  "problem": "Рассмотрим следующий код. Если имя файла, содержащего код, - myfile.py, каков будет вывод при запуске \"python -OO myfile.py\"?",
  "code_snippet": "def myFunc():\n    '''doc'''\n    pass\n\nprint(myFunc.doc)\n\nx = 1\ny = 2\nassert(x == y)"
  },
  {
  "problem": "Предполагая версию Python >= 3.8, какие из следующих способов вызова foo являются допустимыми?",
  "code_snippet": "def foo(a, /, b, *, c):\n    sum_val = a + b + c\n    product_val = a * b * c\n    return product_val // sum_val"
  },
  {
  "problem": "Рассмотрим следующий код. В каком порядке будет вывод?",
  "code_snippet": "def Decorator(func):\n    print(\"C\")\n    def Wrapper(*args, **kwargs):\n        return func(*args, **kwargs)\n    return Wrapper\n\n\n@Decorator\ndef DecoratedMethod():\n    print(\"B\")\n\nprint(\"A\")\n\nif name == \"main\":\n    DecoratedMethod()"
  },
  {
  "problem": "Предполагая версию Python >= 3.5, что будет выведено в результате выполнения следующего кода?",
  "code_snippet": "def add_ints(a: int, b:int) -> int:\n    return a + b\n\nprint(add_ints(1, 1), end=\",\")\nprint(add_ints((1,), (2, 3)), end=\",\")\nprint(add_ints(\"1\", \"23\"), end=\"\")"
  },
  {
  "problem": "Рассмотрим следующий Python-скрипт. Каков будет его вывод?",
  "code_snippet": "l1 = [0, [1, 2, 3], (4, 5, 6)]\nl2 = list(l1)\n\nl1[1].remove(3)\nprint(l1 == l2, end=\",\")\n\nl1[1] += [4, 5, 6]\nprint(l1 == l2, end=\",\")\n\nl2[2] += (7, 8)\nprint(l1 == l2, end=\"\")"
  },
  {
  "problem": "Что выведет следующий код?",
  "code_snippet": "def f():\n    print('f', end='')\n    return 2\ndef g():\n    print('g', end='')\n    return 3\ndef h():\n    print('h', end='')\n    return 2\n\nprint(f()  g()  h(), end='')"
  },
  {
  "problem": "Каков результат выполнения данной программы?",
  "code_snippet": "class Cereal:\n    def init(self, name, rating):\n        self._name = name\n        self._rating = rating\n\n    def repr(self):\n        return f\"Cereal({repr(self._name)}, {repr(self._rating)}/5)\"\n\ncoders_crunch = Cereal(\"Coder's Crunch\", 4.4)\nprint(str(coders_crunch))"
  },
  {
  "problem": "Каков результат выполнения данной программы?",
  "code_snippet": "print(1 // -2)"
  },
  {
  "problem": "Каким будет значение grid после выполнения этого кода?",
  "code_snippet": "grid = [[0] * 3] * 3\ngrid[0][0] = 3"
  },
  {
  "problem": "Вы используете CPython 3.13 в дистрибутиве Linux с glibc версии > 2.17, работающем на архитектуре x86_64. Предполагая, что файл wheel существует, какова может быть одна из причин, по которой следующая команда завершается с ошибкой?\n\npip install pkg-0.0.3-py3-none-linux_universal_x86_64.whl",
  "code_snippet": "pip install pkg-0.0.3-py3-none-linux_universal_x86_64.whl"
  },
  {
  "problem": "Рассмотрим следующий код. Каков будет его вывод?",
  "code_snippet": "class A:\n    def init(self, value):\n        self.val = value\n    def hash(self):\n        return hash(self.val)\n\nclass B:\n    def init(self, value):\n        self.val = value\n    def eq(self, other):\n        return isinstance(other, B) and self.val == other.val \n    def hash(self):\n        return hash(self.val)\n\ndict = dict()\n\na = True\nb = 1\ndict[a] = 1\ndict[b] = 2\n\nc = A(3)\nd = A(3)\ndict[c] = 3\ndict[d] = 4\n\ne = B(4)\nf = B(4)\ndict[e] = 5\ndict[f] = 6\n\nprint(sum(dict.values()))"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано?",
  "code_snippet": "class Strange:\n    def init(self, val):\n        self.val = val\n\n    def add(self, other):\n        return self.val * other.val\n\n    def radd(self, other):\n        return self.val + other\n\na = Strange(3)\nb = Strange(2)\n\nprint(a + b)\nprint(10 + a)\nprint(a + 10)"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано? Если есть ошибка, напишите 'Error' в качестве ответа.",
  "code_snippet": "class A():\n    num = 5\n\n    def getNum(self):\n        return self.__num\n\na = A()\na.__num = 4\n\nprint(f\"{a.getNum()}{len(a.__dict)}{a.__num}\")"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано? Если есть ошибка, напишите 'Error' в качестве ответа.",
  "code_snippet": "class A():\n    def magicMethod(self):\n        return 1\n    \nclass B(A):\n    pass\n\nclass C(B):\n    pass\n\nclass D():\n    def magicMethod(self):\n        return 2\n\nclass E(D):\n    pass\n\nclass F():\n    def magicMethod(self):\n        return 3\n\nclass MyClass(C, E, F):\n    pass\n\nmine = MyClass()\nprint(mine.magicMethod())"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано? Если есть ошибка, напишите 'Error' в качестве ответа.",
  "code_snippet": "class MyClass():\n    def init(self, num):\n        self.mine = num\n    \n    def eq(self, other):\n        if isinstance(other, MyClass):\n            return self.mine - other.mine\n        \nclass YourClass():\n\n    def init(self, num):\n        self.yours = num\n\n    def eq(self, other):\n        if isinstance(other, YourClass):\n            return self.yours + other.yours\n        elif isinstance(other, MyClass):\n            return self.yours * other.mine\n        else:\n            return 3\n\nprint(MyClass(4) == YourClass(2))"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано? Если есть ошибка, напишите Error в качестве ответа.",
  "code_snippet": "text = \"Python\"[::-1][::-1]\nprint(text)"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано? Если есть ошибка, напишите Error в качестве ответа.",
  "code_snippet": "print(0b10 + 0o10 + 0x10)"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано? Если есть ошибка, напишите 'Error' в качестве ответа.",
  "code_snippet": "from math import fma\n\nprint(int(fma(2, 2, 1_10_0)))"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет выведено?",
  "code_snippet": "arr1 = [1, 2]\narr2 = [1, 2, 3, 4]\narr3 = list(zip(arr1,arr2))\nprint(len(arr3))"
  },
  {
  "problem": "Рассмотрим следующий код. Каким будет вывод оператора print?",
  "code_snippet": "from copy import replace\nfrom collections import namedtuple\n\nMyTuple = namedtuple(\"myTuple\", [\"x\", \"y\"])\n\nt1 = MyTuple(1,2)\nt2 = replace(t1, x = 3)\n\nprint(t1, t2)"
  },
  {
  "problem": "Каков результат выполнения этой программы? Предположим, что вы используете CPython в качестве интерпретатора.",
  "code_snippet": "a = 1\nb = 1\nif (a is b):\n    print(\"A\")\nelse:\n    print(\"B\")\n\na = 257\nb = 257\nif (a is b):\n    print(\"C\")\nelse:\n    print(\"D\")\n\na = int(\"-6\")\nb = -6\nif (a is b):\n    print(\"E\")\nelse:\n    print(\"F\")"
  },
  {
  "problem": "Каков результат вычисления следующих двух выражений?",
  "code_snippet": "t = (1, 2, [30, 40])\nt[2] += [50, 60]"
  },
  {
  "problem": "Рассмотрим следующий код. Что он выводит?",
  "code_snippet": "x = \"Hello my name is Harold\"\n\nprint(f\"abc{x[-6::2]:>10}123\")"
  },
  {
  "problem": "Рассмотрим следующий код, каков будет вывод?",
  "code_snippet": "# Assume this file is test.py\n\nfrom test import SomeClass  \n\nclass SomeClass:\n    def method(self):\n        return \"Local\"\n\nobj = SomeClass()\nprint(obj.method())"
  },
  {
  "problem": "Рассмотрим следующий код, что он выведет?",
  "code_snippet": "def function(**args):\n    print(type(args))\n    \nfunction(a=1, b=2, c=3)"
  },
  {
  "problem": "Рассмотрим следующий код. Что будет напечатано, если вообще что-то будет напечатано?",
  "code_snippet": "print(min(-0.0, False, round(7/2) - 4.0, float(\"nan\"), key = lambda x: -x))"
  },
  {
  "problem": "Рассмотрим следующий код. В байтах, насколько велик объект x? Предположим, что вы используете 64-битный интерпретатор.",
  "code_snippet": "x = 5"
  },
  {
  "problem": "Рассмотрим следующий код, что он выведет?",
  "code_snippet": "a = (1)\nprint(type(a))"
  },
  {
  "problem": "Рассмотрим следующий код, какой из следующих вариантов является правильным выводом, если вообще какой-либо вывод есть?",
  "code_snippet": "result = 6 / 2\nprint(type(result))"
  },
  {
  "problem": "Рассмотрим следующий код, каков будет вывод кода, если вообще какой-либо вывод есть?",
  "code_snippet": "def create_functions():\n    functions = []\n    for i in range(3):\n        functions.append(lambda x: x + i)\n    return functions\n\nf1, f2, f3 = create_functions()\nprint(f1(0), f2(0), f3(0), sep='')"
  },
  {
  "problem": "Что из следующего нельзя использовать для создания неглубокой копии списка?\n[*arr]\ncopy.copy(arr)\n(lambda x: x)(arr)\narr.copy()",
  "code_snippet": "import copy\n\narr = [1,2,3]\n\narrCopy = ???"
  },
  {
  "problem": "Рассмотрим следующий код. Что делает dis.dis(myFunction)?",
  "code_snippet": "import dis\n\ndef myFunction(x):\n    y = x + 1\n    return y * x\n\ndis.dis(myFunction)\n\nprint(myFunction(5))"
  },
  {
  "problem": "Рассмотрим следующий код. Каков будет вывод оператора print?",
  "code_snippet": "#1\n\"\"\"2\"\"\"\ndef myFunc():\n    #3\n    \"\"\"4\"\"\"\n    #5\n    \"\"\"6\"\"\"\n    return None\n    \"\"\"7\"\"\"\n    #8\n#9\n\"\"\"10\"\"\"\n\n\nprint(myFunc.__doc__)"
  },
  {
  "problem": "Как называется присваивание нескольких переменных одной последовательности?",
  "code_snippet": ""
  },
  {
  "problem": "Рассмотрим следующий код. В каком порядке будут выведены числа? Выведите ответ без пробелов / переносов строк.",
  "code_snippet": "def func1():\n    try:\n        func2()\n    except:\n        print(1)\n    print(2)\n\ndef func2():\n    try:\n        func3()\n    except:\n        print(3)\n    print(4)\n\ndef func3():\n    raise Exception(\"5\")\n    print(6)\n    \nfunc1()"
  },
  {
  "problem": "Рассмотрим следующий код. Каким будет вывод операторов print?",
  "code_snippet": "def myAppend(element, arr = []):\n    arr.append(element)\n    return arr\n\nprint(myAppend(7), end = \" \")\nprint(myAppend(9))"
  },
  {
  "problem": "Рассмотрим следующий код. Каков ответ?",
  "code_snippet": "from functools import cache, wraps\n\ndef log(func):\n    if getattr(func, \"_log\", False):\n        return func\n    \n    @wraps(func)\n    def wrapper(*args, **kwargs):\n        result = func(*args, **kwargs)\n        print(result, end='')\n        return result\n    \n    wrapper._log = True\n    return wrapper\n\n@log\n@cache\n@log\ndef foo(a):\n    return a\n    \nfoo(1)\nfoo(2)\nfoo(1)"
  },
  {
  "problem": "В Python есть система управления памятью, ориентированная на минимизацию накладных расходов, возникающих при вызовах malloc или mmap. При каком размере (в байтах) объекта менеджер памяти Python вынужден сделать вызов malloc или mmap (вне pymalloc)?",
  "code_snippet": ""
  },
  {
  "problem": "Рассмотрим следующий код. Каков будет вывод?",
  "code_snippet": "a = \"Hello\"\nb = \"Hello\"\n\nprint(a is b)"
  },
  {
  "problem": "Что такое оператор walrus?",
  "code_snippet": ""
  },
  {
  "problem": "Что такое GIL?",
  "code_snippet": ""
  },
  {
  "problem": "Какова роль декоратора в Python?",
  "code_snippet": ""
  },
  {
  "problem": "В следующем коде, где хранятся числа в списке в программе Python?",
  "code_snippet": "x = [1,2,3]"
  },
  {
  "problem": "Что означает 'dunder' в Python?",
  "code_snippet": ""
  }
]