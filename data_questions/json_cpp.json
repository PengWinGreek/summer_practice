[
  {
    "problem": "В чем заключаются основные принципы ООП?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сложность алгоритма?",
    "code_snippet": ""
  },
  {
    "problem": "Код работает неправильно. Что делать?",
    "code_snippet": ""
  },
  {
    "problem": "Объясните такие структуры данных, как стек и очередь.",
    "code_snippet": ""
  },
  {
    "problem": "Какие книги, связанные с программированием, читали? Чему с них научились?",
    "code_snippet": ""
  },
  {
    "problem": "Что интересного нашли в новых стандартах С++17, С++20, C++23?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое таблица ASCII?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Unicode?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое паттерны проектирования и для чего их используют?",
    "code_snippet": ""
  },
  {
    "problem": "Паттерны Singleton, Strategy, Template-Method, Decorator?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего нужны модульные тесты?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между модульными и интеграционными тестами?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое TDD?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое шаблонный класс и шаблонная функция?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое конструкторы? Какие типы знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Может ли конструктор быть шаблонной функцией?",
    "code_snippet": ""
  },
  {
    "problem": "Может ли виртуальная функция быть шаблонной?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое инстанциация шаблона?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое специализация шаблона? Частичная специализация шаблона?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите об имплементации шаблонных классов в срр-файле?",
    "code_snippet": ""
  },
  {
    "problem": "Как проходит процесс компиляции срр-файлов в бинарный файл?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое препроцессор?",
    "code_snippet": ""
  },
  {
    "problem": "Как работает препроцессор?",
    "code_snippet": ""
  },
  {
    "problem": "Какие знаете команды препроцессора?",
    "code_snippet": ""
  },
  {
    "problem": "Как работает директива include?",
    "code_snippet": ""
  },
  {
    "problem": "Как работает директива define?",
    "code_snippet": ""
  },
  {
    "problem": "Что именно линкует линкер?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое оптимизация компилятора?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое флажки компиляции?",
    "code_snippet": ""
  },
  {
    "problem": "Как защитить хедер от повторного включения?",
    "code_snippet": ""
  },
  {
    "problem": "Что делает директива include?",
    "code_snippet": ""
  },
  {
    "problem": "Как работают макросы?",
    "code_snippet": ""
  },
  {
    "problem": "Как static влияет на глобальные/локальные переменные?",
    "code_snippet": ""
  },
  {
    "problem": "Как const влияет на переменную?",
    "code_snippet": ""
  },
  {
    "problem": "Какие варианты использования extern знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Какие варианты использования volatile знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть битовые операции?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое булевая алгебра?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите об этапах разработки библиотеки или программы.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое алгоритмы сортировки и какие вы знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Какие алгоритмы работы со строками знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Какие алгоритмы на графах знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Где может храниться переменная?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между calloc и malloc?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используют realloc?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое указатель?",
    "code_snippet": ""
  },
  {
    "problem": "Каков размер указателя и от чего он зависит?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть операции с указателями?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое struct?",
    "code_snippet": ""
  },
  {
    "problem": "Как определить размер структур?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое выравнивание в структурах?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое union?",
    "code_snippet": ""
  },
  {
    "problem": "Какой размер union?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое класс?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть основные типы данных в C++?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое инкапсуляция? Как она реализуется в C++?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть встроенные типы в С++?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое enum?",
    "code_snippet": ""
  },
  {
    "problem": "Как соотносится класс и объект?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между структурой и классом?",
    "code_snippet": ""
  },
  {
    "problem": "Разница между private/protected/public и где они используются?",
    "code_snippet": ""
  },
  {
    "problem": "Какие методы класса являются стандартными для класса?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое абстрактный класс и зачем он?",
    "code_snippet": ""
  },
  {
    "problem": "Сколько памяти занимает объект пустого класса class A {};?",
    "code_snippet": ""
  },
  {
    "problem": "Что случится с функцией, если к ней добавить ключевое слово static? В контексте члена класса? В контексте метода класса?",
    "code_snippet": ""
  },
  {
    "problem": "Какие особенности статических полей класса?",
    "code_snippet": ""
  },
  {
    "problem": "Какая особенность константных методов-членов класса?",
    "code_snippet": ""
  },
  {
    "problem": "Как изменить поле класса в константном методе класса?",
    "code_snippet": ""
  },
  {
    "problem": "Какие методы можно вызвать из константных объектов?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое куча и стек? Различия, принцип работы.",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между указателем и ссылкой?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего нужен указатель на функцию? Как его объявить?",
    "code_snippet": ""
  },
  {
    "problem": "Что будет, если забыть вызвать delete? Когда освободится эта память?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое умный указатель? Какие умные указатели есть в стандартной библиотеке?",
    "code_snippet": ""
  },
  {
    "problem": "Как работает std::unique_ptr?",
    "code_snippet": ""
  },
  {
    "problem": "Как работает std::shared_ptr?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о константности переменной, ссылки, указателя. Что такое константный указатель и указатель на константу? Размер указателя в памяти?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о передаче аргументов по значению, по ссылке и по указателю.",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о порядке вычисления аргументов функции?",
    "code_snippet": ""
  },
  {
    "problem": "Что произойдет, если вернуть ссылку на временный объект?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое перегрузки функции? Виды перегрузки.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое явное и неявное приведение типов в С++? Расскажите о функциях явного приведения типов в C++.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое инициализация переменной в if?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое ленивые вычисления в С++?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о циклах for и range-for.",
    "code_snippet": ""
  },
  {
    "problem": "Что делает ключевое слово auto? auto-определение return-типа, аргументов функции?",
    "code_snippet": ""
  },
  {
    "problem": "Чем отличаются delete и delete [ ] ? Что случится, если вызвать delete у объекта, созданного через new [ ] ?",
    "code_snippet": ""
  },
  {
    "problem": "Обработка ошибок в С++. Какие конструкции используют при обработке exception?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли выбрасывать exception из конструктора? Какие поля будут сконструированы, какие поля будут разрушены?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое memory leak?",
    "code_snippet": ""
  },
  {
    "problem": "Можно ли выбрасывать exception из деструктора?",
    "code_snippet": ""
  },
  {
    "problem": "Как отловить деление на 0 в С++?",
    "code_snippet": ""
  },
  {
    "problem": "Как работают константные методы?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое лямбда-функция в С++? Как получить доступ к переменным во внешней области видимости?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего использовать namespace, anonymous namespace?",
    "code_snippet": ""
  },
  {
    "problem": "Как вызвать объект из nested namespace?",
    "code_snippet": ""
  },
  {
    "problem": "Как работают inline-функции? Может ли такая функция быть рекурсивной?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое полиморфизм?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используется наследование?",
    "code_snippet": ""
  },
  {
    "problem": "Какие бывают типы наследования?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используют виртуальное наследование?",
    "code_snippet": ""
  },
  {
    "problem": "Как можно решить проблему ромбовидного наследования без использования виртуального наследования?",
    "code_snippet": ""
  },
  {
    "problem": "Что случится, если класс-наследник передать по значению в функцию, которая принимает базовый класс?",
    "code_snippet": ""
  },
  {
    "problem": "Что случится, если пронаследоваться от базового класса, который не имеет виртуального конструктора?",
    "code_snippet": ""
  },
  {
    "problem": "Что случится, если вызвать переопределенную virtual function из конструктора? Может ли конструктор быть виртуальным?",
    "code_snippet": ""
  },
  {
    "problem": "Может ли pure virtual function иметь имплементацию? Что случится, если вызвать pure virtual function из конструктора?",
    "code_snippet": ""
  },
  {
    "problem": "Какие методы генерируются для класса по умолчанию? В каком случае такие методы не будут генерироваться? Как заставить компилятор добавить/удалить эти методы?",
    "code_snippet": ""
  },
  {
    "problem": "Как запретить наследовать класс?",
    "code_snippet": ""
  },
  {
    "problem": "Какой порядок конструирования и разрушения классов в иерархии? Порядок инициализации полей класса?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть способы инициализации полей класса?",
    "code_snippet": ""
  },
  {
    "problem": "Может ли деструктор быть виртуальным?",
    "code_snippet": ""
  },
  {
    "problem": "Что делает ключевое слово virtual?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используют виртуальный деструктор?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое глубокое копирование?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое виртуальные функции и зачем они нужны?",
    "code_snippet": ""
  },
  {
    "problem": "Как защитить объект от копирования?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое семантика перемещения?",
    "code_snippet": ""
  },
  {
    "problem": "Из чего состоит STL?",
    "code_snippet": ""
  },
  {
    "problem": "Какие алгоритмы применяли с STL? В чем преимущество использования алгоритмов перед собственноручно написанными функциями?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о контейнерах стандартной библиотеки vector, list, map, unordered_map.",
    "code_snippet": ""
  },
  {
    "problem": "Какие знаете типы итераторов? Чем они отличаются? В каких контейнерах используются?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между std::set, std::map, std::unordered_multimap?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое идиома remove-erase?",
    "code_snippet": ""
  },
  {
    "problem": "Как получить наименьшее значение типа?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между std::map и std::hashmap?",
    "code_snippet": ""
  },
  {
    "problem": "Как подсчитать количество элементов в std::list?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сложность алгоритма и от чего она зависит?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между vector и list и в каких случаях их лучше использовать?",
    "code_snippet": ""
  },
  {
    "problem": "Что вам известно о многопоточности?",
    "code_snippet": ""
  },
  {
    "problem": "Что общего и различного в процессах и потоках?",
    "code_snippet": ""
  },
  {
    "problem": "Как синхронизировать передачи информации между потоками?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между мьютексом и семафором?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое deadlock?",
    "code_snippet": ""
  },
  {
    "problem": "Является ли С++ thread-safe?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое race-condition?",
    "code_snippet": ""
  },
  {
    "problem": "Как избежать состояния гонки?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое атомарная операция?",
    "code_snippet": ""
  },
  {
    "problem": "Как работать с std::mutex?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сокет?",
    "code_snippet": ""
  },
  {
    "problem": "Какие операции можно делать с сокетом?",
    "code_snippet": ""
  },
  {
    "problem": "Какая информация нужна, чтобы создать сокет?",
    "code_snippet": ""
  },
  {
    "problem": "Какие бывают модели сетей?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите об уровнях модели OSI.",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите об уровнях модели TCP/IP.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое IP-адрес?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используется маска подсети?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между IPv4 и IPv6?",
    "code_snippet": ""
  },
  {
    "problem": "Сколько памяти необходимо для хранения IPv4?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего нужен порт?",
    "code_snippet": ""
  },
  {
    "problem": "Сколько максимально может быть портов?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между TCP и UDP?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего такой ненадежный UDP-протокол?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое менеджер пакетов?",
    "code_snippet": ""
  },
  {
    "problem": "Какие бывают менеджеры пакетов?",
    "code_snippet": ""
  },
  {
    "problem": "Какие бывают дистрибутивы Linux?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое PID?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используют файловые дескрипторы?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о стандартных файловых дескрипторах процесса.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Pipe?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Named Pipe?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое UID?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о командах bash.",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть виды SCM?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используют системы контроля версий?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть команды git?",
    "code_snippet": ""
  },
  {
    "problem": "Какие этапы во время комита изменений?",
    "code_snippet": ""
  },
  {
    "problem": "Разница между git fetch и git pull?",
    "code_snippet": ""
  },
  {
    "problem": "Какие есть этапы решения merge conflict?",
    "code_snippet": ""
  },
  {
    "problem": "Посчитайте количество единиц в произвольном числе.",
    "code_snippet": ""
  },
  {
    "problem": "Есть структура по типу «односвязный список». Напишите функцию, которая разворачивает список. То есть, первый элемент становится последним, а последний - первым.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите реализацию функции int atoi (const char *str); преобразования строки в число.",
    "code_snippet": ""
  },
  {
    "problem": "Для структуры типа односвязный список напишите функцию вставки элемента.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте класс vector.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте бинарный поиск в массиве.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте любую сортировку.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте макрос для сравнения двух строк.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте реверс строк.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте перевода числа из строки в int.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте подсчет слов в предложении.",
    "code_snippet": ""
  },
  {
    "problem": "Реализуйте подсчет чисел Фибоначчи.",
    "code_snippet": ""
  },
  {
    "problem": "Найдите такие элементы двух массивов, которые попадаются только в каждом из них. Желательно использовать STL.",
    "code_snippet": ""
  },
  {
    "problem": "Удалите из unordered_map элементы, которые делятся на 2 и выведите ключи этих элементов.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите класс для логирования, который мог бы логировать к консоли или файлу.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите функцию для определения, является ли определенный год високосным.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите функцию для определения, является ли определенное слово палиндромом.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите реализацию паттерна Singleton.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите реализацию std::vector с операциями: push_back, push_front, pop_back, pop_front, size, clear.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите рекурсивный поиск значения в дереве бинарного поиска.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите функцию, которая проверяет, является ли дерево сбалансированным.",
    "code_snippet": ""
  },
  {
    "problem": "Напишите функцию для поиска уникального элемента в массиве.",
    "code_snippet": ""
  },
  {
    "problem": "Какие курсы прошли или книги прочитали за этот год? Чему научились?",
    "code_snippet": ""
  },
  {
    "problem": "Что нравится и не нравится в С++? Чего не хватает?",
    "code_snippet": ""
  },
  {
    "problem": "Что интересного нашли в новых стандартах С++17, С++20, С++23 (конкретные фичи)?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о фичах, которые появились в разных версиях языка.",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о модели памяти, которая появилась в С++11 стандарте.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое сериализация? Какие библиотеки знаете?",
    "code_snippet": ""
  },
  {
    "problem": "Какие знаете паттерны проектирования?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое операционная система? Какие существуют типы по назначению?",
    "code_snippet": ""
  },
  {
    "problem": "Назвать основные составляющие и принципы работы ОС Linux в качестве примера системы общего назначения.",
    "code_snippet": ""
  },
  {
    "problem": "Что такое SFINAE и PIMPL?",
    "code_snippet": ""
  },
  {
    "problem": "Назовите порождающие, структурные и поведенческие паттерны программирования и приведите примеры их использования.",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о системах автоматизации билд-процесса.",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между статической и динамической библиотеками?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между исполнительным файлом и динамической библиотекой?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое DLL hell?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое флажки компиляции (fPIC)?",
    "code_snippet": ""
  },
  {
    "problem": "В чем разница между дебаженной и релизной сборкой?",
    "code_snippet": ""
  },
  {
    "problem": "Что нужно для использования сторонней библиотеки?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое internal linkage?",
    "code_snippet": ""
  },
  {
    "problem": "Что будет, если дважды вызвать free?",
    "code_snippet": ""
  },
  {
    "problem": "Как происходит вызов функции?",
    "code_snippet": ""
  },
  {
    "problem": "Как происходит передача параметров в функцию?",
    "code_snippet": ""
  },
  {
    "problem": "Как прорабатывается константа переменных?",
    "code_snippet": ""
  },
  {
    "problem": "Что означает ключевое слово inline?",
    "code_snippet": ""
  },
  {
    "problem": "Для чего используют выравнивания, можно ли его контролировать?",
    "code_snippet": ""
  },
  {
    "problem": "Расскажите о битовых полях.",
    "code_snippet": ""
  },
  {
    "problem": "Для чего нужен extern \"C\"?",
    "code_snippet": ""
  },
  {
    "problem": "Что будет, если в двух файлах сделать функцию с одинаковым именем и параметрами? На каком этапе возникнет ошибка?",
    "code_snippet": ""
  },
  {
    "problem": "Как экспортировать/импортировать функции из динамической библиотеки?",
    "code_snippet": ""
  },
  {
    "problem": "Какая разница между С-style приведением типов и C++ приведением?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое явное и неявное приведение типов в С++? Зачем делать explicit-конструктор?",
    "code_snippet": ""
  },
  {
    "problem": "Что такое Uniform initialization? Aggregate initialization?",
    "code_snippet": ""
  }
]