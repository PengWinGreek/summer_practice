[
    {
        "problem": "Области данных времени выполнения",
        "code_snippet": "",
        "tags": [
            "Java",
            "heap/stack",
            "JVM"
        ]
    },
    {
        "problem": "Frames",
        "code_snippet": "",
        "tags": [
            "Java",
            "heap/stack"
        ]
    },
    {
        "problem": "Execution Engine",
        "code_snippet": "",
        "tags": [
            "Java",
            "JVM"
        ]
    },
    {
        "problem": "Чем различаются JRE, JVM и JDK?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Какие существуют модификаторы доступа?",
        "code_snippet": "",
        "tags": [
            "Java",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "О чем говорит ключевое слово final?",
        "code_snippet": "",
        "tags": [
            "Java",
            "final",
            "ключевые слова"
        ]
    },
    {
        "problem": "Какими значениями инициализируются переменные по умолчанию?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переменные"
        ]
    },
    {
        "problem": "Что вы знаете о функции main()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы",
            "ключевые слова"
        ]
    },
    {
        "problem": "Какие логические операции и операторы вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "логические операторы",
            "операторы",
            "ключевые слова"
        ]
    },
    {
        "problem": "Что такое тернарный оператор выбора?",
        "code_snippet": "",
        "tags": [
            "Java",
            "тернарный оператор",
            "операторы",
            "ключевые слова"
        ]
    },
    {
        "problem": "Какие побитовые операции вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "операторы",
            "ключевые слова"
        ]
    },
    {
        "problem": "Где и для чего используется модификатор abstract?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстракция",
            "абстрактные классы",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Дайте определение понятию «интерфейс». Какие модификаторы по умолчанию имеют поля и методы интерфейсов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Чем абстрактный класс отличается от интерфейса? В каких случаях следует использовать абстрактный класс, а в каких интерфейс?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстрактные классы",
            "интерфейсы"
        ]
    },
    {
        "problem": "Почему в некоторых интерфейсах вообще не определяют методов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "абстрактные классы"
        ]
    },
    {
        "problem": "Почему нельзя объявить метод интерфейса с модификатором final?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "final"
        ]
    },
    {
        "problem": "Что имеет более высокий уровень абстракции - класс, абстрактный класс или интерфейс?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстракция",
            "абстрактные классы",
            "интерфейсы"
        ]
    },
    {
        "problem": "Может ли объект получить доступ к private-переменной класса? Если, да, то каким образом?",
        "code_snippet": "",
        "tags": [
            "Java",
            "инкапсуляция",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Каков порядок вызова конструкторов и блоков инициализации с учётом иерархии классов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "конструкторы",
            "инициализация",
            "наследование"
        ]
    },
    {
        "problem": "Зачем нужны и какие бывают блоки инициализации?",
        "code_snippet": "",
        "tags": [
            "Java",
            "инициализация",
            "конструкторы"
        ]
    },
    {
        "problem": "К каким конструкциям Java применим модификатор static?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Для чего в Java используются статические блоки инициализации?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "инициализация"
        ]
    },
    {
        "problem": "Что произойдёт, если в блоке инициализации возникнет исключительная ситуация?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "инициализация"
        ]
    },
    {
        "problem": "Какое исключение выбрасывается при возникновении ошибки в блоке инициализации класса?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "инициализация"
        ]
    },
    {
        "problem": "Может ли статический метод быть переопределён или перегружен?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "переопределение методов",
            "перегрузка методов"
        ]
    },
    {
        "problem": "Могут ли нестатические методы перегрузить статические?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "перегрузка методов"
        ]
    },
    {
        "problem": "Можно ли сузить уровень доступа/тип возвращаемого значения при переопределении метода?",
        "code_snippet": "",
        "tags": [
            "Java",
            "модификаторы доступа",
            "переопределение методов"
        ]
    },
    {
        "problem": "Возможно ли при переопределении метода изменить: модификатор доступа; возвращаемый тип; тип аргумента или их количество; имена аргументов или их порядок, убирать, добавлять, изменять порядок следования элементов секции throws?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "модификаторы доступа",
            "аргументы методов"
        ]
    },
    {
        "problem": "Как получить доступ к переопределенным методам родительского класса?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "наследование",
            "this/super"
        ]
    },
    {
        "problem": "Можно ли объявить метод абстрактным и статическим одновременно?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстрактные классы",
            "static методы"
        ]
    },
    {
        "problem": "В чем разница между членом экземпляра класса и статическим членом класса?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "классы и объекты"
        ]
    },
    {
        "problem": "Где разрешена инициализация статических/нестатических полей?",
        "code_snippet": "",
        "tags": [
            "Java",
            "инициализация",
            "static методы"
        ]
    },
    {
        "problem": "Какие типы классов бывают в java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "вложенные классы",
            "анонимные классы",
            "абстрактные классы"
        ]
    },
    {
        "problem": "Что такое «статический класс»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "вложенные классы"
        ]
    },
    {
        "problem": "Какие существуют особенности использования вложенных классов: статических и внутренних? В чем заключается разница между ними?",
        "code_snippet": "",
        "tags": [
            "Java",
            "вложенные классы",
            "static методы"
        ]
    },
    {
        "problem": "Что такое «локальный класс»? Каковы его особенности?",
        "code_snippet": "",
        "tags": [
            "Java",
            "вложенные классы"
        ]
    },
    {
        "problem": "Что такое «анонимные классы»? Где они применяются?",
        "code_snippet": "",
        "tags": [
            "Java",
            "анонимные классы",
            "вложенные классы"
        ]
    },
    {
        "problem": "Каким образом из вложенного класса получить доступ к полю внешнего класса?",
        "code_snippet": "",
        "tags": [
            "Java",
            "вложенные классы",
            "this/super"
        ]
    },
    {
        "problem": "Для чего используется оператор assert?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ключевые слова",
            "операторы"
        ]
    },
    {
        "problem": "Для чего нужен сборщик мусора?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сборка мусора",
            "управление памятью"
        ]
    },
    {
        "problem": "Как работает сборщик мусора?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сборка мусора",
            "управление памятью"
        ]
    },
    {
        "problem": "Какие разновидности сборщиков мусора реализованы в виртуальной машине HotSpot?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сборка мусора",
            "JVM"
        ]
    },
    {
        "problem": "Опишите алгоритм работы какого-нибудь сборщика мусора реализованного в виртуальной машине HotSpot.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы",
            "сборка мусора"
        ]
    },
    {
        "problem": "Что произойдет со сборщиком мусора, если выполнение метода finalize() требует ощутимо много времени, или в процессе выполнения будет выброшено исключение?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сборка мусора",
            "обработка исключений"
        ]
    },
    {
        "problem": "Чем отличаются final, finally и finalize()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "final",
            "try-catch-finally"
        ]
    },
    {
        "problem": "Что такое Heap и Stack память в Java? Какая разница между ними?",
        "code_snippet": "",
        "tags": [
            "Java",
            "heap/stack",
            "управление памятью"
        ]
    },
    {
        "problem": "Верно ли утверждение, что примитивные типы данных всегда хранятся в стеке, а экземпляры ссылочных типов данных в куче?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "heap/stack"
        ]
    },
    {
        "problem": "Каким образом передаются переменные в методы, по значению или по ссылке?",
        "code_snippet": "",
        "tags": [
            "Java",
            "аргументы методов",
            "типы данных"
        ]
    },
    {
        "problem": "Расскажите про приведение типов. Что такое понижение и повышение типа?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "операторы"
        ]
    },
    {
        "problem": "Когда в приложении может быть выброшено исключение ClassCastException?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "checked/unchecked исключения"
        ]
    },
    {
        "problem": "Что такое литералы?",
        "code_snippet": "",
        "tags": [
            "Java",
            "литералы"
        ]
    },
    {
        "problem": "Какие есть особенности класса String?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "обработка исключений"
        ]
    },
    {
        "problem": "Почему char[] предпочтительнее String для хранения пароля?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "безопасность"
        ]
    },
    {
        "problem": "Почему строка является популярным ключом в HashMap в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "типы данных"
        ]
    },
    {
        "problem": "Что делает метод intern() в классе String?.",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "методы"
        ]
    },
    {
        "problem": "Можно ли использовать строки в конструкции switch?",
        "code_snippet": "",
        "tags": [
            "Java",
            "switch-case",
            "типы данных"
        ]
    },
    {
        "problem": "Какая основная разница между String, StringBuffer, StringBuilder?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Что такое класс Object? Какие в нем есть методы?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "методы"
        ]
    },
    {
        "problem": "Расскажите про клонирование объектов.",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "методы"
        ]
    },
    {
        "problem": "В чем отличие между поверхностным и глубоким клонированием?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "методы"
        ]
    },
    {
        "problem": "Какой способ клонирования предпочтительней?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "методы"
        ]
    },
    {
        "problem": "Почему метод clone() объявлен в классе Object, а не в интерфейсе Cloneable?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "интерфейсы"
        ]
    },
    {
        "problem": "Чем отличаются конструкторы по-умолчанию, копирования и конструктор с параметрами?",
        "code_snippet": "",
        "tags": [
            "Java",
            "конструкторы"
        ]
    },
    {
        "problem": "Где и как вы можете использовать закрытый конструктор?",
        "code_snippet": "",
        "tags": [
            "Java",
            "конструкторы",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Зачем нужен equals(). Чем он отличается от операции ==?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "методы"
        ]
    },
    {
        "problem": "equals() порождает отношение эквивалентности. Какими свойствами обладает такое отношение?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы"
        ]
    },
    {
        "problem": "Если вы хотите переопределить equals(), какие условия должны удовлетворяться для переопределенного метода?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "методы"
        ]
    },
    {
        "problem": "Правила переопределения метода Object.equals().",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "методы"
        ]
    },
    {
        "problem": "Какая связь между hashCode() и equals()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Если equals() переопределен, есть ли какие-либо другие методы, которые следует переопределить?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Что будет, если переопределить equals() не переопределяя hashCode()? Какие могут возникнуть проблемы?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Каким образом реализованы методы hashCode() и equals() в классе Object?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Для чего нужен метод hashCode()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "методы"
        ]
    },
    {
        "problem": "Правила переопределения метода Object.hashCode().",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Есть ли какие-либо рекомендации о том, какие поля следует использовать при подсчете hashCode()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Могут ли у разных объектов быть одинаковые hashCode()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Если у класса Point{int x, y;} реализовать метод equals(Object that) {(return this.x == that.x && this.y == that.y)}, но сделать хэш-код в виде int hashCode() {return x;}, то будут ли корректно такие точки помещаться и извлекаться из HashSet?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Могут ли у разных объектов (ref0 != ref1) быть ref0.equals(ref1) == true?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Могут ли у разных ссылок на один объект (ref0 == ref1) быть ref0.equals(ref1) == false?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Можно ли так реализовать метод equals(Object that) {return this.hashCode() == that.hashCode()}?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "В equals() требуется проверять, что аргумент equals(Object that) такого же типа что и сам объект. В чем разница между this.getClass() == that.getClass() и that instanceof MyClass?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов"
        ]
    },
    {
        "problem": "Можно ли реализовать метод equals() класса MyClass вот так: class MyClass {public boolean equals(MyClass that) {return this == that;}}?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов"
        ]
    },
    {
        "problem": "Есть класс Point{int x, y;}. Почему хэш-код в виде 31 * x + y предпочтительнее чем x + y?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "HashSet/TreeSet"
        ]
    },
    {
        "problem": "Опишите иерархию исключений.",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений"
        ]
    },
    {
        "problem": "Какие виды исключений в Java вы знаете, чем они отличаются?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "checked/unchecked исключения"
        ]
    },
    {
        "problem": "Какой оператор позволяет принудительно выбросить исключение?",
        "code_snippet": "",
        "tags": [
            "Java",
            "throw/throws",
            "обработка исключений"
        ]
    },
    {
        "problem": "Как написать собственное («пользовательское») исключение?",
        "code_snippet": "",
        "tags": [
            "Java",
            "пользовательские исключения",
            "обработка исключений"
        ]
    },
    {
        "problem": "Что вы знаете о OutOfMemoryError?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "управление памятью"
        ]
    },
    {
        "problem": "Опишите работу блока try-catch-finally.",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally",
            "обработка исключений"
        ]
    },
    {
        "problem": "Что такое механизм try-with-resources?",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally",
            "работа с файлами"
        ]
    },
    {
        "problem": "Возможно ли использование блока try-finally (без catch)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally",
            "обработка исключений"
        ]
    },
    {
        "problem": "Может ли один блок catch отлавливать сразу несколько исключений?",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally",
            "обработка исключений"
        ]
    },
    {
        "problem": "Всегда ли исполняется блок finally?",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally"
        ]
    },
    {
        "problem": "Существуют ли ситуации, когда блок finally не будет выполнен?",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally",
            "обработка исключений"
        ]
    },
    {
        "problem": "Может ли метод main выбросить исключение во вне и если да, то где будет происходить обработка данного исключения?",
        "code_snippet": "",
        "tags": [
            "Java",
            "main()",
            "обработка исключений"
        ]
    },
    {
        "problem": "Предположим, есть метод, который может выбросить IOException и FileNotFoundException в какой последовательности должны идти блоки catch? Сколько блоков catch будет выполнено?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "checked/unchecked исключения"
        ]
    },
    {
        "problem": "Что такое generics?",
        "code_snippet": "",
        "tags": [
            "Java",
            "дженерики"
        ]
    },
    {
        "problem": "Что такое «интернационализация», «локализация»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Что такое «коллекция»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции"
        ]
    },
    {
        "problem": "Назовите основные интерфейсы JCF и их реализации.",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "интерфейсы"
        ]
    },
    {
        "problem": "Расположите в виде иерархии следующие интерфейсы: List, Set, Map, SortedSet, SortedMap, Collection, Iterable, Iterator, NavigableSet, NavigableMap.",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "интерфейсы"
        ]
    },
    {
        "problem": "Почему Map — это не Collection, в то время как List и Set являются Collection?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "List/Set/Map"
        ]
    },
    {
        "problem": "В чем разница между классами java.util.Collection и java.util.Collections?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции"
        ]
    },
    {
        "problem": "Что такое «fail-fast поведение»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "итераторы"
        ]
    },
    {
        "problem": "Какая разница между fail-fast и fail-safe?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "итераторы"
        ]
    },
    {
        "problem": "Приведите примеры итераторов реализующих поведение fail-safe",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "коллекции"
        ]
    },
    {
        "problem": "Чем различаются Enumeration и Iterator.",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "коллекции"
        ]
    },
    {
        "problem": "Как между собой связаны Iterable, Iterator и «for-each»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "циклы (for, while, do-while)"
        ]
    },
    {
        "problem": "Сравните Iterator и ListIterator.",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "List/Set/Map"
        ]
    },
    {
        "problem": "Что произойдет при вызове Iterator.next() без предварительного вызова Iterator.hasNext()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "обработка исключений"
        ]
    },
    {
        "problem": "Сколько элементов будет пропущено, если Iterator.next() будет вызван после 10-ти вызовов Iterator.hasNext()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы"
        ]
    },
    {
        "problem": "Как поведёт себя коллекция, если вызвать iterator.remove()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "коллекции"
        ]
    },
    {
        "problem": "Как поведёт себя уже инстанциированный итератор для collection, если вызвать collection.remove()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "Concurrent Collections"
        ]
    },
    {
        "problem": "Как избежать ConcurrentModificationException во время перебора коллекции?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Concurrent Collections",
            "итераторы"
        ]
    },
    {
        "problem": "Какая коллекция реализует дисциплину обслуживания FIFO?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map",
            "очереди"
        ]
    },
    {
        "problem": "Какая коллекция реализует дисциплину обслуживания FILO?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map",
            "очереди"
        ]
    },
    {
        "problem": "Чем отличается ArrayList от Vector?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Зачем добавили ArrayList, если уже был Vector?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Чем отличается ArrayList от LinkedList? В каких случаях лучше использовать первый, а в каких второй?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Что работает быстрее ArrayList или LinkedList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Какое худшее время работы метода contains() для элемента, который есть в LinkedList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "алгоритмы"
        ]
    },
    {
        "problem": "Какое худшее время работы метода contains() для элемента, который есть в ArrayList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "алгоритмы"
        ]
    },
    {
        "problem": "Какое худшее время работы метода add() для LinkedList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "алгоритмы"
        ]
    },
    {
        "problem": "Какое худшее время работы метода add() для ArrayList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "алгоритмы"
        ]
    },
    {
        "problem": "Необходимо добавить 1 млн. элементов, какую структуру вы используете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "структуры данных",
            "ArrayList/LinkedList"
        ]
    },
    {
        "problem": "Как происходит удаление элементов из ArrayList? Как меняется в этом случае размер ArrayList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Предложите эффективный алгоритм удаления нескольких рядом стоящих элементов из середины списка, реализуемого ArrayList.",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "алгоритмы",
            "структуры данных"
        ]
    },
    {
        "problem": "Сколько необходимо дополнительной памяти при вызове ArrayList.add()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "управление памятью"
        ]
    },
    {
        "problem": "Сколько выделяется дополнительно памяти при вызове LinkedList.add()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "управление памятью"
        ]
    },
    {
        "problem": "Оцените количество памяти на хранение одного примитива типа byte в LinkedList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "управление памятью"
        ]
    },
    {
        "problem": "Оцените количество памяти на хранение одного примитива типа byte в ArrayList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных",
            "управление памятью"
        ]
    },
    {
        "problem": "Для ArrayList или для LinkedList операция добавления элемента в середину (list.add(list.size()/2, newElement)) медленнее?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "алгоритмы",
            "структуры данных"
        ]
    },
    {
        "problem": "В реализации класса ArrayList есть следующие поля: Object[] elementData, int size. Объясните, зачем хранить отдельно size, если всегда можно взять elementData.length?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Сравните интерфейсы Queue и Deque.",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map",
            "интерфейсы"
        ]
    },
    {
        "problem": "Кто кого расширяет: Queue расширяет Deque, или Deque расширяет Queue?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map",
            "интерфейсы"
        ]
    },
    {
        "problem": "Почему LinkedList реализует и List, и Deque?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "интерфейсы"
        ]
    },
    {
        "problem": "LinkedList — это односвязный, двусвязный или четырехсвязный список?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Как перебрать элементы LinkedList в обратном порядке, не используя медленный get(index)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "Что позволяет сделать PriorityQueue?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map",
            "структуры данных"
        ]
    },
    {
        "problem": "Stack считается «устаревшим». Чем его рекомендуют заменять? Почему?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map",
            "структуры данных"
        ]
    },
    {
        "problem": "В чем разница между HashMap и IdentityHashMap? Для чего нужна IdentityHashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "структуры данных"
        ]
    },
    {
        "problem": "В чем разница между HashMap и WeakHashMap? Для чего используется WeakHashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "структуры данных"
        ]
    },
    {
        "problem": "В WeakHashMap используются WeakReferences. А почему бы не создать SoftHashMap на SoftReferences?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "структуры данных"
        ]
    },
    {
        "problem": "В WeakHashMap используются WeakReferences. А почему бы не создать PhantomHashMap на PhantomReferences?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "структуры данных"
        ]
    },
    {
        "problem": "LinkedHashMap - что в нем от LinkedList, а что от HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "ArrayList/LinkedList",
            "структуры данных"
        ]
    },
    {
        "problem": "В чем проявляется «сортированность» SortedMap, кроме того, что toString() выводит все элементы по порядку?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "структуры данных"
        ]
    },
    {
        "problem": "Как устроен HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "структуры данных"
        ]
    },
    {
        "problem": "Согласно Кнуту и Кормену существует две основных реализации хэш-таблицы: на основе открытой адресации и на основе метода цепочек. Как реализована HashMap? Почему, по вашему мнению, была выбрана именно эта реализация? В чем плюсы и минусы каждого подхода?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как работает HashMap при попытке сохранить в него два элемента по ключам с одинаковым hashCode(), но для которых equals() == false?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Какое начальное количество корзин в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Какова оценка временной сложности операций над элементами из HashMap? Гарантирует ли HashMap указанную сложность выборки элемента?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "алгоритмы"
        ]
    },
    {
        "problem": "Возможна ли ситуация, когда HashMap выродится в список даже с ключами имеющими разные hashCode()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "ArrayList/LinkedList"
        ]
    },
    {
        "problem": "В каком случае может быть потерян элемент в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Почему нельзя использовать byte[] в качестве ключа в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Какова роль equals() и hashCode() в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Какое максимальное число значений hashCode()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Какое худшее время работы метода get(key) для ключа, которого нет в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "алгоритмы"
        ]
    },
    {
        "problem": "Какое худшее время работы метода get(key) для ключа, который есть в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "алгоритмы"
        ]
    },
    {
        "problem": "Почему несмотря на то, что ключ в HashMap не обязан реализовывать интерфейс Comparable, двусвязный список всегда удается преобразовать в красно-черное-дерево?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "алгоритмы"
        ]
    },
    {
        "problem": "Сколько переходов происходит в момент вызова HashMap.get(key) по ключу, который есть в таблице?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Сколько создается новых объектов, когда вы добавляете новый элемент в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Как и когда происходит увеличение количества корзин в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Объясните смысл параметров в конструкторе HashMap(int initialCapacity, float loadFactor).",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Будет ли работать HashMap, если все добавляемые ключи будут иметь одинаковый hashCode()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Как перебрать все ключи Map?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map"
        ]
    },
    {
        "problem": "Как перебрать все значения Map?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map"
        ]
    },
    {
        "problem": "Как перебрать все пары «ключ-значение» в Map?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map"
        ]
    },
    {
        "problem": "В чем отличия TreeSet и HashSet?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet"
        ]
    },
    {
        "problem": "Что будет, если добавлять элементы в TreeSet по возрастанию?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "структуры данных",
            "алгоритмы"
        ]
    },
    {
        "problem": "Чем LinkedHashSet отличается от HashSet?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet"
        ]
    },
    {
        "problem": "Для Enum есть специальный класс java.util.EnumSet. Зачем? Чем авторов не устраивал HashSet или TreeSet?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "дженерики"
        ]
    },
    {
        "problem": "Какие существуют способы перебирать элементы списка?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "List/Set/Map"
        ]
    },
    {
        "problem": "Каким образом можно получить синхронизированные объекты стандартных коллекций?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Concurrent Collections",
            "коллекции"
        ]
    },
    {
        "problem": "Как получить коллекцию только для чтения?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции"
        ]
    },
    {
        "problem": "Напишите однопоточную программу, которая заставляет коллекцию выбросить ConcurrentModificationException.",
        "code_snippet": "",
        "tags": [
            "Java",
            "Concurrent Collections",
            "коллекции",
            "итераторы"
        ]
    },
    {
        "problem": "Приведите пример, когда какая-либо коллекция выбрасывает UnsupportedOperationException.",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "обработка исключений"
        ]
    },
    {
        "problem": "Реализуйте симметрическую разность двух коллекций используя методы Collection (addAll(...), removeAll(...), retainAll(...)).",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как, используя LinkedHashMap, сделать кэш c «invalidation policy»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "LinkedHashMap",
            "кэширование"
        ]
    },
    {
        "problem": "Как одной строчкой скопировать элементы любой collection в массив?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "ArrayList/LinkedList"
        ]
    },
    {
        "problem": "Как одним вызовом из List получить List со всеми элементами, кроме первых и последних 3-х?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как одной строчкой преобразовать HashSet в ArrayList?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "ArrayList/LinkedList"
        ]
    },
    {
        "problem": "Как одной строчкой преобразовать ArrayList в HashSet?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "HashSet/TreeSet"
        ]
    },
    {
        "problem": "Сделайте HashSet из ключей HashMap.",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Сделайте HashMap из HashSet<Map.Entry<K, V>>.",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "HashMap/TreeMap"
        ]
    },
    {
        "problem": "Какие нововведения, появились в Java 8 и JDK 8?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения",
            "Stream API",
            "метод references",
            "дженерики"
        ]
    },
    {
        "problem": "Что такое «лямбда»? Какова структура и особенности использования лямбда-выражения?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "К каким переменным есть доступ у лямбда-выражений?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Как отсортировать список строк с помощью лямбда-выражения?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения",
            "ArrayList/LinkedList",
            "алгоритмы"
        ]
    },
    {
        "problem": "Что такое «ссылка на метод»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "метод references",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Какие виды ссылок на методы вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "метод references",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Объясните выражение System.out::println.",
        "code_snippet": "",
        "tags": [
            "Java",
            "метод references"
        ]
    },
    {
        "problem": "Что такое «функциональные интерфейсы»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы Function<T,R>, DoubleFunction<R>, IntFunction<R> и LongFunction<R>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы UnaryOperator<T>, DoubleUnaryOperator, IntUnaryOperator и LongUnaryOperator?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы BinaryOperator<T>, DoubleBinaryOperator, IntBinaryOperator и LongBinaryOperator?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы Predicate<T>, DoublePredicate, IntPredicate и LongPredicate?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы Consumer<T>, DoubleConsumer, IntConsumer и LongConsumer?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы Supplier<T>, BooleanSupplier, DoubleSupplier, IntSupplier и LongSupplier?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужен функциональный интерфейс BiConsumer<T,U>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужен функциональный интерфейс BiFunction<T,U,R>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Для чего нужен функциональный интерфейс BiPredicate<T,U>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения",
            "интерфейсы",
            "Stream API"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы вида _To_Function?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения",
            "интерфейсы",
            "Stream API"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы ToDoubleBiFunction<T,U>, ToIntBiFunction<T,U> и ToLongBiFunction<T,U>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения",
            "интерфейсы",
            "Stream API"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы ToDoubleFunction<T>, ToIntFunction<T> и ToLongFunction<T>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения",
            "интерфейсы",
            "Stream API"
        ]
    },
    {
        "problem": "Для чего нужны функциональные интерфейсы ObjDoubleConsumer<T>, ObjIntConsumer<T> и ObjLongConsumer<T>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "лямбда-выражения",
            "интерфейсы",
            "Stream API"
        ]
    },
    {
        "problem": "Что такое StringJoiner?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Что такое default методы интрефейса?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "переопределение методов"
        ]
    },
    {
        "problem": "Как вызывать default метод интерфейса в реализующем этот интерфейс классе?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "переопределение методов",
            "классы и объекты"
        ]
    },
    {
        "problem": "Как вызывать static метод интерфейса?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "static методы"
        ]
    },
    {
        "problem": "Что такое Optional?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "Stream API"
        ]
    },
    {
        "problem": "Что такое Stream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "коллекции"
        ]
    },
    {
        "problem": "Какие существуют способы создания стрима?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "коллекции"
        ]
    },
    {
        "problem": "В чем разница между Collection и Stream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "коллекции"
        ]
    },
    {
        "problem": "Для чего нужен метод collect() в стримах?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "коллекции"
        ]
    },
    {
        "problem": "Для чего в стримах применяются методы forEach() и forEachOrdered()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API"
        ]
    },
    {
        "problem": "Для чего в стримах предназначены методы map() и mapToInt(), mapToDouble(), mapToLong()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API"
        ]
    },
    {
        "problem": "Какова цель метода filter() в стримах?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API"
        ]
    },
    {
        "problem": "Для чего в стримах предназначен метод limit()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API"
        ]
    },
    {
        "problem": "Для чего в стримах предназначен метод sorted()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Для чего в стримах предназначены методы flatMap(), flatMapToInt(), flatMapToDouble(), flatMapToLong()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API"
        ]
    },
    {
        "problem": "Расскажите о параллельной обработке в Java 8.",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "многопоточность"
        ]
    },
    {
        "problem": "Какие конечные методы работы со стримами вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API"
        ]
    },
    {
        "problem": "Какие промежуточные методы работы со стримами вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API"
        ]
    },
    {
        "problem": "Как вывести на экран 10 случайных чисел, используя forEach()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как можно вывести на экран уникальные квадраты чисел используя метод map()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как вывести на экран количество пустых строк с помощью метода filter()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как вывести на экран 10 случайных чисел в порядке возрастания?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как найти максимальное число в наборе?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как найти минимальное число в наборе?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как получить сумму всех чисел в наборе?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как получить среднее значение всех чисел?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "алгоритмы"
        ]
    },
    {
        "problem": "Какие дополнительные методы для работы с ассоциативными массивами (maps) появились в Java 8?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "коллекции"
        ]
    },
    {
        "problem": "Что такое LocalDateTime?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Что такое ZonedDateTime?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Как добавить 1 неделю, 1 месяц, 1 год, 10 лет к текущей дате с использованием Date Time API?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Как получить следующий вторник используя Date Time API?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Как получить вторую субботу текущего месяца используя Date Time API?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Как получить текущее время по местному времени с точностью до миллисекунд используя Date Time API?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Как определить повторяемую аннотацию?",
        "code_snippet": "",
        "tags": [
            "Java",
            "аннотации"
        ]
    },
    {
        "problem": "Что такое Nashorn?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM",
            "интерпретаторы"
        ]
    },
    {
        "problem": "Что такое jjs?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM",
            "интерпретаторы"
        ]
    },
    {
        "problem": "Какой класс появился в Java 8 для кодирования/декодирования данных?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Как создать Base64 кодировщик и декодировщик?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "В чём заключается разница между IO и NIO?",
        "code_snippet": "",
        "tags": [
            "Java",
            "NIO",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Какие особенности NIO вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "NIO"
        ]
    },
    {
        "problem": "Что такое «каналы»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "NIO"
        ]
    },
    {
        "problem": "Какие существуют виды потоков ввода/вывода?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Назовите основные классы потоков ввода/вывода.",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "В каких пакетах расположены классы потоков ввода/вывода?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Какие подклассы класса InputStream вы знаете, для чего они предназначены?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Для чего используется PushbackInputStream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Для чего используется SequenceInputStream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Какой класс позволяет читать данные из входного байтового потока в формате примитивных типов данных?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Какие подклассы класса OutputStream вы знаете, для чего они предназначены?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Какие подклассы класса Reader вы знаете, для чего они предназначены?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Какие подклассы класса Writer вы знаете, для чего они предназначены?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Reader/Writer"
        ]
    },
    {
        "problem": "В чем отличие класса PrintWriter от PrintStream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Чем отличаются и что общего у InputStream, OutputStream, Reader, Writer?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Какие классы позволяют преобразовать байтовые потоки в символьные и обратно?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Какие классы позволяют ускорить чтение/запись за счет использования буфера?",
        "code_snippet": "",
        "tags": [
            "Java",
            "BufferedReader",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Какой класс предназначен для работы с элементами файловой системы?",
        "code_snippet": "",
        "tags": [
            "Java",
            "File",
            "работа с файлами"
        ]
    },
    {
        "problem": "Какие методы класса File вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "File",
            "работа с файлами"
        ]
    },
    {
        "problem": "Что вы знаете об интерфейсе FileFilter?",
        "code_snippet": "",
        "tags": [
            "Java",
            "File",
            "интерфейсы"
        ]
    },
    {
        "problem": "Как выбрать все элементы определенного каталога по критерию (например, с определенным расширением)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "File",
            "работа с файлами"
        ]
    },
    {
        "problem": "Что вы знаете о RandomAccessFile?",
        "code_snippet": "",
        "tags": [
            "Java",
            "File",
            "работа с файлами"
        ]
    },
    {
        "problem": "Какие режимы доступа к файлу есть у RandomAccessFile?",
        "code_snippet": "",
        "tags": [
            "Java",
            "File",
            "работа с файлами"
        ]
    },
    {
        "problem": "Какие классы поддерживают чтение и запись потоков в компрессированном формате?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Существует ли возможность перенаправить потоки стандартного ввода/вывода?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Какой символ является разделителем при указании пути в файловой системе?",
        "code_snippet": "",
        "tags": [
            "Java",
            "работа с файлами"
        ]
    },
    {
        "problem": "Что такое «абсолютный путь» и «относительный путь»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "работа с файлами"
        ]
    },
    {
        "problem": "Что такое «символьная ссылка»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "работа с файлами"
        ]
    },
    {
        "problem": "Что такое «сериализация»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Опишите процесс сериализации/десериализации с использованием Serializable.",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация",
            "интерфейсы"
        ]
    },
    {
        "problem": "Как изменить стандартное поведение сериализации/десериализации?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Как исключить поля из сериализации?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Какое влияние оказывают на сериализуемость модификаторы полей static и final",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация",
            "static методы",
            "final"
        ]
    },
    {
        "problem": "Как не допустить сериализацию?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Как создать собственный протокол сериализации?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Какая роль поля serialVersionUID в сериализации?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Когда стоит изменять значение поля serialVersionUID?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "В чем проблема сериализации Singleton?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация",
            "паттерны проектирования"
        ]
    },
    {
        "problem": "Какие существуют способы контроля за значениями десериализованного объекта",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Что такое «сервлет»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "В чем заключаются преимущества технологии сервлетов над CGI (Common Gateway Interface)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Какова структура веб-проекта?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "JSP"
        ]
    },
    {
        "problem": "Что такое «контейнер сервлетов»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Зачем нужны сервера приложений, если есть контейнеры сервлетов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Как контейнер сервлетов управляет жизненным циклом сервлета, когда и какие методы вызываются?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "жизненный цикл"
        ]
    },
    {
        "problem": "Что такое «дескриптор развертывания»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Какие действия необходимо проделать при создании сервлетов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "В каком случае требуется переопределять метод service()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "переопределение методов"
        ]
    },
    {
        "problem": "Есть ли смысл определять для сервлета конструктор? Каким образом лучше инициализировать данные?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "конструкторы"
        ]
    },
    {
        "problem": "Почему необходимо переопределить только init() метод без аргументов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "переопределение методов"
        ]
    },
    {
        "problem": "Какие наиболее распространенные задачи выполняются в контейнере сервлетов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Что вы знаете о сервлетных фильтрах?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Зачем в сервлетах используются различные listener?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Когда стоит использовать фильтры сервлетов, а когда слушателей?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Как реализовать запуск сервлета одновременно с запуском приложения?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Как обработать в приложении исключения, выброшенные другим сервлетом?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "обработка исключений"
        ]
    },
    {
        "problem": "Что представляет собой ServletConfig?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Что представляет собой ServletContext?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "В чем отличия ServletContext и ServletConfig?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Для чего нужен интерфейс ServletResponse?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Для чего нужен интерфейс ServletRequest?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Что такое Request Dispatcher?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Как из одного сервлета вызвать другой сервлет?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Чем отличается sendRedirect() от forward()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Для чего используются атрибуты сервлетов и как происходит работа с ними?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Каким образом можно допустить в сервлете deadlock?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "deadlock"
        ]
    },
    {
        "problem": "Как получить реальное расположение сервлета на сервере?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Как получить информацию о сервере из сервлета?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Как получить IP адрес клиента на сервере?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Какие классы-обертки для сервлетов вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "В чем отличия GenericServlet и HttpServlet?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Почему HttpServlet класс объявлен как абстрактный?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "абстрактные классы"
        ]
    },
    {
        "problem": "Какие основные методы присутствуют в классе HttpServlet?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "методы"
        ]
    },
    {
        "problem": "Стоит ли волноваться о многопоточной безопасности работая с сервлетами?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "многопоточность"
        ]
    },
    {
        "problem": "Какой метод HTTP не является неизменяемым?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "RESTful"
        ]
    },
    {
        "problem": "Какие есть методы отправки данных с клиента на сервер?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "RESTful"
        ]
    },
    {
        "problem": "В чем разница между методами GET и POST?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "RESTful"
        ]
    },
    {
        "problem": "В чем разница между PrintWriter и ServletOutputStream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Можно ли одновременно использовать в сервлете PrintWriter и ServletOutputStream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Расскажите об интерфейсе SingleThreadModel.",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "многопоточность"
        ]
    },
    {
        "problem": "Что означает URL encoding? Как это осуществить в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Какие различные методы управления сессией в сервлетах вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "сессии"
        ]
    },
    {
        "problem": "Что такое cookies?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "cookies"
        ]
    },
    {
        "problem": "Какие методы для работы с cookies предусмотрены в сервлетах?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "cookies"
        ]
    },
    {
        "problem": "Что такое URL Rewriting?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Зачем нужны и чем отличаются методы encodeURL() и encodeRedirectURL()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Что такое «сессия»?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сессии"
        ]
    },
    {
        "problem": "Как уведомить объект в сессии, что сессия недействительна или закончилась?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сессии"
        ]
    },
    {
        "problem": "Какой существует эффективный способ удостоверится, что все сервлеты доступны только для пользователя с верной сессией?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "сессии",
            "аутентификация"
        ]
    },
    {
        "problem": "Как организовать подключение к базе данных, обеспечить журналирование в сервлете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "JDBC",
            "логирование"
        ]
    },
    {
        "problem": "Какие основные особенности появились в спецификации Servlet 3?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Какие способы аутентификации доступны сервлету?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets",
            "аутентификация"
        ]
    },
    {
        "problem": "Что такое Java Server Pages (JSP)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Зачем нужен JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Опишите, как обрабатываются JSP страницы, начиная от запроса к серверу, заканчивая ответом пользователю.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Расскажите об этапах (фазах) жизненного цикла JSP.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Расскажите о методах жизненного цикла JSP.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Какие методы жизненного цикла JSP могут быть переопределены?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "переопределение методов"
        ]
    },
    {
        "problem": "Как можно предотвратить прямой доступ к JSP странице из браузера?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "авторизация"
        ]
    },
    {
        "problem": "Какая разница между динамическим и статическим содержимым JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Как закомментировать код в JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "комментарии"
        ]
    },
    {
        "problem": "Какие существуют основные типы тегов JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "типы данных"
        ]
    },
    {
        "problem": "Что вы знаете о действиях JSP (Action tag и JSP Action Elements).",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Взаимодействие JSP - сервлет - JSP.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "Servlets"
        ]
    },
    {
        "problem": "Какие области видимости переменных существуют в JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "переменные"
        ]
    },
    {
        "problem": "Какие неявные, внутренние объекты и методы есть на JSP странице?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Какие неявные объекты не доступны в обычной JSP странице?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Что вы знаете о PageContext и какие преимущества его использования?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Как сконфигурировать параметры инициализации для JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Почему не рекомендуется использовать скриплеты (скриптовые элементы) в JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Можно ли определить класс внутри JSP страницы?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что вы знаете о Языке выражений JSP (JSP Expression Language – EL)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Какие типы EL операторов вы знаете?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "операторы"
        ]
    },
    {
        "problem": "Назовите неявные, внутренние объекты JSP EL и их отличия от объектов JSP.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Как отключить возможность использования EL в JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Как узнать тип HTTP метода используя JSP EL?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "RESTful"
        ]
    },
    {
        "problem": "Что такое JSTL (JSP Standard tag library)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Из каких групп тегов состоит библиотека JSTL?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Какая разница между <c:set> и <jsp:useBean>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Чем отличается <c:import> от <jsp:include> и директивы <%@include %>?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Как можно расширить функциональность JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Что вы знаете о написании пользовательских JSP тегов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Приведите пример использования собственных тегов.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Как сделать перенос строки в HTML средствами JSP?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Почему не нужно конфигурировать стандартные JSP теги в web.xml?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Как можно обработать ошибки JSP страниц?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "обработка исключений"
        ]
    },
    {
        "problem": "Как происходит обработка ошибок с помощью JSTL?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "обработка исключений"
        ]
    },
    {
        "problem": "Как конфигурируется JSP в дескрипторе развертывания.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Можно ли использовать Javascript на JSP странице?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Всегда ли создается объект сессии на JSP странице, можно ли отключить его создание?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "сессии"
        ]
    },
    {
        "problem": "Какая разница между JSPWriter и сервлетным PrintWriter?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP",
            "Servlets"
        ]
    },
    {
        "problem": "Опишите общие практические принципы работы с JSP.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JSP"
        ]
    },
    {
        "problem": "Что такое JDBC?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "В чем заключаются преимущества использования JDBC?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Что из себя представляет JDBC URL?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Из каких частей стоит JDBC?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Перечислите основные типы данных используемые в JDBC. Как они связаны с типами Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC",
            "типы данных"
        ]
    },
    {
        "problem": "Опишите основные этапы работы с базой данных с использованием JDBC.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Как зарегистрировать драйвер JDBC?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Как установить соединение с базой данных?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Какие уровни изоляции транзакций поддерживаются в JDBC?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC",
            "транзакции"
        ]
    },
    {
        "problem": "При помощи чего формируются запросы к базе данных?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Чем отличается Statement от PreparedStatement?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Как осуществляется запрос к базе данных и обработка результатов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Как вызвать хранимую процедуру?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Как закрыть соединение с базой данных?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Какие существуют типы исключений? Объясните иерархию классов исключений в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений"
        ]
    },
    {
        "problem": "В чем разница между памятью кучи и стека в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "heap/stack"
        ]
    },
    {
        "problem": "Что такое JVM и является ли она независимой от платформы?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JVM"
        ]
    },
    {
        "problem": "Что такое JIT-компилятор в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JVM"
        ]
    },
    {
        "problem": "Что такое ClassLoader в Java? Какие существуют типы загрузчиков классов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JVM"
        ]
    },
    {
        "problem": "Где хранится Java-компилятор: в JDK, JRE или JVM?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "В чем разница между фабричным методом и абстрактной фабрикой?",
        "code_snippet": "",
        "tags": [
            "Java",
            "паттерны проектирования",
            "абстрактные классы",
            "методы"
        ]
    },
    {
        "problem": "Какие методы используются для реализации ключевого объекта в HashMap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "переопределение методов",
            "коллекции"
        ]
    },
    {
        "problem": "В чем разница между внутренним классом и подклассом?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "наследование",
            "вложенные классы"
        ]
    },
    {
        "problem": "В чем различие между статической и динамической загрузкой классов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "JVM"
        ]
    },
    {
        "problem": "В чем разница между переменными transient и volatile в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "модификаторы доступа",
            "volatile/synchronized"
        ]
    },
    {
        "problem": "Сколько типов областей памяти выделяет JVM?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JVM",
            "heap/stack",
            "управление памятью"
        ]
    },
    {
        "problem": "Как можно выполнить цепочку конструкторов с помощью ключевого слова this?",
        "code_snippet": "",
        "tags": [
            "Java",
            "конструкторы",
            "this/super"
        ]
    },
    {
        "problem": "Можно ли объявить метод main как final?",
        "code_snippet": "",
        "tags": [
            "Java",
            "final",
            "методы"
        ]
    },
    {
        "problem": "Могут ли быть виртуальные функции в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "полиморфизм"
        ]
    },
    {
        "problem": "Что такое ковариантный возвращаемый тип?",
        "code_snippet": "",
        "tags": [
            "Java",
            "возвращаемые значения"
        ]
    },
    {
        "problem": "В чем разница между абстракцией и инкапсуляцией?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстракция",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Можно ли использовать private или protected переменные в интерфейсе?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Когда можно привести ссылку на объект к ссылке на интерфейс в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы",
            "классы и объекты"
        ]
    },
    {
        "problem": "Какова иерархия классов InputStream и OutputStream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Какова цель классов Runtime и System?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Что такое утверждения (assertions) в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ключевые слова"
        ]
    },
    {
        "problem": "Что такое Java Reflection API?",
        "code_snippet": "",
        "tags": [
            "Java",
            "рефлексия"
        ]
    },
    {
        "problem": "Какие ограничения применяются к статическим методам в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы"
        ]
    },
    {
        "problem": "Что такое final-переменная, final-класс и пустая final-переменная?",
        "code_snippet": "",
        "tags": [
            "Java",
            "final"
        ]
    },
    {
        "problem": "Что такое статический импорт?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ключевые слова"
        ]
    },
    {
        "problem": "Назови некоторые классы из пакета java.util.regex?",
        "code_snippet": "",
        "tags": [
            "Java",
            "регулярные выражения"
        ]
    },
    {
        "problem": "Как можно вызвать внешний процесс в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Runtime",
            "System"
        ]
    },
    {
        "problem": "Какова цель использования классов BufferedInputStream и BufferedOutputStream?",
        "code_snippet": "",
        "tags": [
            "Java",
            "InputStream/OutputStream",
            "BufferedReader"
        ]
    },
    {
        "problem": "Как установить права доступа к файлу в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "работа с файлами",
            "File"
        ]
    },
    {
        "problem": "Какими способами можно получить ввод с консоли в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "работа с файлами",
            "InputStream/OutputStream"
        ]
    },
    {
        "problem": "Как избежать сериализации в дочернем классе, если базовый класс реализует интерфейс Serializable?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "В чем разница между интерфейсами Serializable и Externalizable?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Какими способами можно создать экземпляр класса Class?",
        "code_snippet": "",
        "tags": [
            "Java",
            "рефлексия",
            "классы и объекты"
        ]
    },
    {
        "problem": "Какова цель использования javap?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Что такое автобоксинг и анбоксинг? Когда они происходят?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Что такое нативный метод?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ключевые слова"
        ]
    },
    {
        "problem": "Что такое неизменяемый объект? Можете ли вы написать неизменяемый объект?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты"
        ]
    },
    {
        "problem": "В чем разница между парсерами DOM и SAX в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "работа с файлами"
        ]
    },
    {
        "problem": "В чем разница между созданием строки с помощью new() и строкового литерала?",
        "code_snippet": "",
        "tags": [
            "Java",
            "литералы",
            "типы данных"
        ]
    },
    {
        "problem": "Как создать неизменяемый класс в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты"
        ]
    },
    {
        "problem": "В чем разница между String, StringBuffer и StringBuilder?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Что такое утечка памяти? Как она может возникнуть в языке с автоматическим сборщиком мусора?",
        "code_snippet": "",
        "tags": [
            "Java",
            "управление памятью",
            "Memory Leaks",
            "сборка мусора"
        ]
    },
    {
        "problem": "В чем разница между ошибкой (Error) и исключением (Exception)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений"
        ]
    },
    {
        "problem": "Объясните, что такое распространение исключений?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "throw/throws"
        ]
    },
    {
        "problem": "Какие сценарии вызывают исключение \"Exception in thread main\"?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "методы",
            "Thread/Runnable"
        ]
    },
    {
        "problem": "В чем разница между throw и throws?",
        "code_snippet": "",
        "tags": [
            "Java",
            "throw/throws"
        ]
    },
    {
        "problem": "В чем разница между последовательным и параллельным сборщиком мусора?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сборка мусора",
            "управление памятью"
        ]
    },
    {
        "problem": "В чем разница между WeakReference и SoftReference в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "управление памятью"
        ]
    },
    {
        "problem": "Что такое константа времени компиляции в Java? Каковы риски ее использования?",
        "code_snippet": "",
        "tags": [
            "Java",
            "литералы",
            "final"
        ]
    },
    {
        "problem": "Как работает загрузчик классов bootstrap в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JVM"
        ]
    },
    {
        "problem": "Почему строка неизменяема в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое пул строк в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "классы и объекты"
        ]
    },
    {
        "problem": "Как создать маркерный интерфейс?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы"
        ]
    },
    {
        "problem": "Как работает сериализация в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "Программа на Java для реализации односвязного списка?",
        "code_snippet": "",
        "tags": [
            "Java",
            "структуры данных",
            "алгоритмы"
        ]
    },
    {
        "problem": "Можно ли при переопределении метода выбросить другое или более широкое исключение?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "обработка исключений",
            "throw/throws"
        ]
    },
    {
        "problem": "В чем разница между ClassNotFoundException и NoClassDefFoundError?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений",
            "JVM"
        ]
    },
    {
        "problem": "Что означает слабая ссылка (weak reference)?",
        "code_snippet": "",
        "tags": [
            "Java",
            "управление памятью"
        ]
    },
    {
        "problem": "Если в родительском классе нет явного конструктора, а в дочернем классе он есть, вызовет ли JVM неявный конструктор родительского класса при вызове конструктора дочернего класса?",
        "code_snippet": "",
        "tags": [
            "Java",
            "наследование",
            "конструкторы",
            "this/super"
        ]
    },
    {
        "problem": "Какие существуют типы драйверов JDBC?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Как реализуется концепция инкапсуляции в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "инкапсуляция",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Знаете ли вы о дженериках? Как вы их использовали в своем коде?",
        "code_snippet": "",
        "tags": [
            "Java",
            "дженерики"
        ]
    },
    {
        "problem": "Как создать объект класса без использования оператора new?",
        "code_snippet": "",
        "tags": [
            "Java",
            "рефлексия",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое CopyOnWriteArrayList в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "Concurrent Collections"
        ]
    },
    {
        "problem": "Как тестировать статический метод?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JUnit",
            "static методы"
        ]
    },
    {
        "problem": "Как тестировать метод на исключение с помощью JUnit?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JUnit",
            "обработка исключений"
        ]
    },
    {
        "problem": "Какие библиотеки юнит-тестирования вы использовали для тестирования Java-программ?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JUnit",
            "TestNG",
            "Mockito"
        ]
    },
    {
        "problem": "В чем разница между аннотациями @Before и @BeforeClass?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JUnit",
            "аннотации"
        ]
    },
    {
        "problem": "Можете ли вы объяснить принцип подстановки Лискова?",
        "code_snippet": "",
        "tags": [
            "Java",
            "наследование",
            "полиморфизм"
        ]
    },
    {
        "problem": "Приведите пример шаблона проектирования, основанного на принципе открытости/закрытости?",
        "code_snippet": "",
        "tags": [
            "Java",
            "паттерны проектирования"
        ]
    },
    {
        "problem": "Что такое нарушение закона Деметры? Почему это важно?",
        "code_snippet": "",
        "tags": [
            "Java",
            "паттерны проектирования"
        ]
    },
    {
        "problem": "В чем разница между внешней и внутренней итерацией?",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "Stream API"
        ]
    },
    {
        "problem": "Что такое Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Какие концепции ООП существуют?",
        "code_snippet": "",
        "tags": [
            "Java",
            "инкапсуляция",
            "наследование",
            "полиморфизм",
            "абстракция"
        ]
    },
    {
        "problem": "Назовите некоторые особенности Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Является ли Java на 100% объектно-ориентированным языком?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое абстракция?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстракция"
        ]
    },
    {
        "problem": "Что такое инкапсуляция?",
        "code_snippet": "",
        "tags": [
            "Java",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Какие различия между абстракцией и инкапсуляцией?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстракция",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Что такое полиморфизм?",
        "code_snippet": "",
        "tags": [
            "Java",
            "полиморфизм"
        ]
    },
    {
        "problem": "Какие типы полиморфизма существуют?",
        "code_snippet": "",
        "tags": [
            "Java",
            "полиморфизм"
        ]
    },
    {
        "problem": "Что такое наследование?",
        "code_snippet": "",
        "tags": [
            "Java",
            "наследование"
        ]
    },
    {
        "problem": "Почему Java называется платформонезависимым языком программирования?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Что означает ключевое слово static?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ключевые слова",
            "static методы"
        ]
    },
    {
        "problem": "Можно ли переопределить private или static метод в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "static методы",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Можно ли получить доступ к нестатической переменной в статическом контексте?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "переменные"
        ]
    },
    {
        "problem": "Какие типы данных поддерживаются Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Что такое переопределение и перегрузка методов в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переопределение методов",
            "перегрузка методов"
        ]
    },
    {
        "problem": "Что такое конструктор?",
        "code_snippet": "",
        "tags": [
            "Java",
            "конструкторы"
        ]
    },
    {
        "problem": "Что такое перегрузка конструкторов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "конструкторы"
        ]
    },
    {
        "problem": "Поддерживает ли Java множественное наследование?",
        "code_snippet": "",
        "tags": [
            "Java",
            "наследование",
            "интерфейсы"
        ]
    },
    {
        "problem": "Что такое передача по ссылке и передача по значению?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных"
        ]
    },
    {
        "problem": "Для чего используется volatile переменная?",
        "code_snippet": "",
        "tags": [
            "Java",
            "volatile/synchronized",
            "переменные"
        ]
    },
    {
        "problem": "Что такое локальная переменная и переменная экземпляра?",
        "code_snippet": "",
        "tags": [
            "Java",
            "переменные"
        ]
    },
    {
        "problem": "Какие модификаторы доступа доступны в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Что такое singleton-класс и как его создать?",
        "code_snippet": "",
        "tags": [
            "Java",
            "паттерны проектирования",
            "классы и объекты"
        ]
    },
    {
        "problem": "Объясните разницу между JDK, JRE и JVM.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Будет ли правильно сказать, что Core Java не на 100% объектно-ориентированный?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты"
        ]
    },
    {
        "problem": "Различия между конструктором и методом? Можно ли пометить конструкторы final?",
        "code_snippet": "",
        "tags": [
            "Java",
            "конструкторы",
            "final",
            "методы"
        ]
    },
    {
        "problem": "Что такое класс в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты"
        ]
    },
    {
        "problem": "Значение public, private, protected класса.",
        "code_snippet": "",
        "tags": [
            "Java",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Что такое final класс?",
        "code_snippet": "",
        "tags": [
            "Java",
            "final"
        ]
    },
    {
        "problem": "Что такое класс-обертка?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое абстрактный класс?",
        "code_snippet": "",
        "tags": [
            "Java",
            "абстрактные классы"
        ]
    },
    {
        "problem": "Опишите синхронизацию в контексте многопоточности.",
        "code_snippet": "",
        "tags": [
            "Java",
            "синхронизация",
            "потоки"
        ]
    },
    {
        "problem": "Цель сборки мусора в Core Java и когда она используется?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сборка мусора",
            "управление памятью"
        ]
    },
    {
        "problem": "Различные способы реализации потока? Какой более предпочтителен?",
        "code_snippet": "",
        "tags": [
            "Java",
            "потоки",
            "Thread/Runnable"
        ]
    },
    {
        "problem": "Что если main() объявлен как private? Что происходит при удалении static из main()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы",
            "static методы",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Первый аргумент массива String в методе main()?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы",
            "аргументы методов"
        ]
    },
    {
        "problem": "Что такое сервлет в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Жизненный цикл сервлета в Core Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Объясните Request Dispatcher?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Servlets"
        ]
    },
    {
        "problem": "Шаги подключения к базе данных в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "Что такое JDBC Driver?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDBC"
        ]
    },
    {
        "problem": "В Core Java, для чего используется оператор == при сравнении объектов?",
        "code_snippet": "",
        "tags": [
            "Java",
            "операторы"
        ]
    },
    {
        "problem": "В Core Java try-with-resources используется в вопросах для опытных. Опишите концепцию этого оператора.",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally"
        ]
    },
    {
        "problem": "Что такое цепочка методов в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы"
        ]
    },
    {
        "problem": "Для чего используется метод hashCode() в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы"
        ]
    },
    {
        "problem": "Как обрабатывать исключения в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "обработка исключений"
        ]
    },
    {
        "problem": "Какие области памяти есть у JVM?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JVM",
            "heap/stack"
        ]
    },
    {
        "problem": "Объясните разницу между fail-fast и fail-safe итераторами в Core Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "коллекции"
        ]
    },
    {
        "problem": "Что такое идиома Double-Checked Locking в многопоточности Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "синхронизация"
        ]
    },
    {
        "problem": "Обсудите улучшения в системе модулей Core Java 9.",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    },
    {
        "problem": "Как использовать ключевое слово default в интерфейсах Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "интерфейсы"
        ]
    },
    {
        "problem": "Какие преимущества Stream API в Core Java для параллельных операций?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Stream API",
            "потоки"
        ]
    },
    {
        "problem": "Что такое стирание типов в Generics Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "дженерики"
        ]
    },
    {
        "problem": "Объясните утечки памяти в Core Java и как их избежать?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Memory Leaks",
            "управление памятью"
        ]
    },
    {
        "problem": "Для чего используется аннотация @FunctionalInterface в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "аннотации"
        ]
    },
    {
        "problem": "Для чего используется аннотация @Override в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "аннотации",
            "переопределение методов"
        ]
    },
    {
        "problem": "Как добиться потокобезопасного singleton в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "синхронизация",
            "паттерны проектирования"
        ]
    },
    {
        "problem": "Что такое проблема ромба в Core Java и как Java её решает?",
        "code_snippet": "",
        "tags": [
            "Java",
            "наследование",
            "интерфейсы"
        ]
    },
    {
        "problem": "Как использовать ключевое слово assert в Core Java и когда это уместно?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ключевые слова"
        ]
    },
    {
        "problem": "Объясните концепцию ссылок на методы в Core Java 8.",
        "code_snippet": "",
        "tags": [
            "Java",
            "метод references",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Что такое интерфейс NavigableSet в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "List/Set/Map",
            "коллекции"
        ]
    },
    {
        "problem": "Как метод forEach в Core Java 8 улучшает обработку коллекций?",
        "code_snippet": "",
        "tags": [
            "Java",
            "коллекции",
            "Stream API"
        ]
    },
    {
        "problem": "Разница между static и instance методами в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "методы"
        ]
    },
    {
        "problem": "Объясните использование ключевого слова super в Core Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "this/super"
        ]
    },
    {
        "problem": "Можно ли изменить значение final переменной в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "final",
            "переменные"
        ]
    },
    {
        "problem": "Что такое пакеты в Core Java и как их использовать?",
        "code_snippet": "",
        "tags": [
            "Java",
            "идентификаторы"
        ]
    },
    {
        "problem": "Опишите роль метода public static void main(String[] args) в Core Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы",
            "static методы"
        ]
    },
    {
        "problem": "Как работает блок try-catch-finally в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally",
            "обработка исключений"
        ]
    },
    {
        "problem": "Разница между == и .equals() в Core Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "операторы",
            "методы"
        ]
    },
    {
        "problem": "Объясните сборку мусора в Core Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "сборка мусора",
            "управление памятью"
        ]
    },
    {
        "problem": "В чем разница между расширением Thread и реализацией Runnable в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Thread/Runnable"
        ]
    },
    {
        "problem": "В чем разница между интерфейсами Runnable и Callable в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Thread/Runnable",
            "Future/Callable"
        ]
    },
    {
        "problem": "Что такое разница между wait и notify в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "синхронизация"
        ]
    },
    {
        "problem": "В чем разница между HashMap и Hashtable в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashMap/TreeMap",
            "коллекции"
        ]
    },
    {
        "problem": "В чем разница между TreeSet и TreeMap в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "HashMap/TreeMap",
            "коллекции"
        ]
    },
    {
        "problem": "Напишите программу на Java для печати ряда Фибоначчи.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы"
        ]
    },
    {
        "problem": "Напишите программу на Java для проверки, является ли число простым.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как поменять два числа без использования временной переменной?",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы",
            "операторы"
        ]
    },
    {
        "problem": "Как проверить, содержит ли связанный список цикл в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы",
            "структуры данных"
        ]
    },
    {
        "problem": "Напишите программу на Java для обращения строки без использования API.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы"
        ]
    },
    {
        "problem": "В чем разница между Serializable и Externalizable в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "сериализация"
        ]
    },
    {
        "problem": "В чем разница между ассоциацией, композицией и агрегацией?",
        "code_snippet": "",
        "tags": [
            "Java",
            "классы и объекты",
            "инкапсуляция"
        ]
    },
    {
        "problem": "В чем разница между FileInputStream и FileReader в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "File",
            "InputStream/OutputStream",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Как преобразовать байты в символы в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "типы данных",
            "Reader/Writer"
        ]
    },
    {
        "problem": "Можно ли иметь оператор return в блоке finally? Что произойдет?",
        "code_snippet": "",
        "tags": [
            "Java",
            "try-catch-finally",
            "обработка исключений"
        ]
    },
    {
        "problem": "Можно ли переопределить статический метод в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "static методы",
            "переопределение методов"
        ]
    },
    {
        "problem": "В чем разница между private, public, package и protected в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Назовите 5 лучших практик кодирования, которые вы изучили в Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "TDD",
            "JUnit",
            "инкапсуляция",
            "модификаторы доступа"
        ]
    },
    {
        "problem": "Напишите программу для нахождения максимального и минимального числа в массиве.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы",
            "массивы array"
        ]
    },
    {
        "problem": "Напишите программу для обращения массива на месте.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы",
            "массивы array"
        ]
    },
    {
        "problem": "Напишите программу для обращения числа в Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы"
        ]
    },
    {
        "problem": "Напишите программу для вычисления факториала в Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы",
            "рекурсия"
        ]
    },
    {
        "problem": "В чем разница между вызовом start() и run() метода Thread?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Thread/Runnable"
        ]
    },
    {
        "problem": "Напишите программу для решения проблемы Producer-Consumer в Java.",
        "code_snippet": "",
        "tags": [
            "Java",
            "потоки",
            "синхронизация",
            "структуры данных"
        ]
    },
    {
        "problem": "Как найти средний элемент связанного списка за один проход?",
        "code_snippet": "",
        "tags": [
            "Java",
            "алгоритмы",
            "структуры данных"
        ]
    },
    {
        "problem": "Что такое контракт equals() и hashCode() в Java? Где он используется?",
        "code_snippet": "",
        "tags": [
            "Java",
            "методы",
            "коллекции"
        ]
    },
    {
        "problem": "Почему методы wait и notify объявлены в классе Object?",
        "code_snippet": "",
        "tags": [
            "Java",
            "синхронизация",
            "классы и объекты"
        ]
    },
    {
        "problem": "Как работает HashSet в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "HashSet/TreeSet",
            "коллекции"
        ]
    },
    {
        "problem": "В чем разница между синхронизированными и concurrent коллекциями в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Concurrent Collections",
            "коллекции"
        ]
    },
    {
        "problem": "В чем разница между Iterator и Enumeration в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "итераторы",
            "коллекции"
        ]
    },
    {
        "problem": "В чем разница между статическим и динамическим связыванием в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "полиморфизм"
        ]
    },
    {
        "problem": "В чем разница между Comparator и Comparable в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "Comparator/Comparable",
            "коллекции"
        ]
    },
    {
        "problem": "Как отсортировать ArrayList в порядке убывания?",
        "code_snippet": "",
        "tags": [
            "Java",
            "ArrayList/LinkedList",
            "алгоритмы",
            "Comparator/Comparable"
        ]
    },
    {
        "problem": "В чем разница между PATH и CLASSPATH в Java?",
        "code_snippet": "",
        "tags": [
            "Java",
            "JDK/JRE/JVM"
        ]
    }
]