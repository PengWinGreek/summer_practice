[
    {
        "problem": "Что такое Ruby и почему он популярен для веб-разработки?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Как создать файл Ruby-скрипта и выполнить его в командной строке?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "работа с файлами",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Как объявляются константы и какова их область видимости в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "константы"
        ]
    },
    {
        "problem": "Объясните использование 'require' и 'include' в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "директивы",
            "модули"
        ]
    },
    {
        "problem": "Что такое итераторы в Ruby и как они работают?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "итераторы"
        ]
    },
    {
        "problem": "Опишите разницу между локальными, переменными экземпляра и переменными класса.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое методы доступа в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аксессоры (getters/setters)",
            "классы и объекты"
        ]
    },
    {
        "problem": "Как работает сборка мусора в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "оптимизация",
            "типы данных"
        ]
    },
    {
        "problem": "Объясните разницу между 'gets.chomp' и 'gets.strip'.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "строки",
            "массивы (Arrays)",
            "ключевые слова"
        ]
    },
    {
        "problem": "Какова роль 'self' в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "ключевые слова"
        ]
    },
    {
        "problem": "Объясните принцип \"Convention over Configuration\" в контексте Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails"
        ]
    },
    {
        "problem": "Как Ruby поддерживает метапрограммирование?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метапрограммирование",
            "комментарии"
        ]
    },
    {
        "problem": "Дайте определение классам и модулям в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "модули"
        ]
    },
    {
        "problem": "Как работает наследование в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование"
        ]
    },
    {
        "problem": "Что такое переопределение метода в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переопределение методов",
            "определение методов"
        ]
    },
    {
        "problem": "Объясните использование 'super' в классах Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое примеси (mixins) и чем они отличаются от наследования?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "миксины (Mixins)",
            "наследование"
        ]
    },
    {
        "problem": "Что такое метод-одиночка (singleton method)?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы"
        ]
    },
    {
        "problem": "Объясните, как создать метод уровня класса.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "определение методов"
        ]
    },
    {
        "problem": "Что такое виртуальные методы в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "определение методов",
            "полиморфизм"
        ]
    },
    {
        "problem": "Как предотвратить создание экземпляра объекта в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция",
            "классы и объекты"
        ]
    },
    {
        "problem": "Объясните концепцию eigenclass объекта в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метаклассы",
            "синглтон-классы"
        ]
    },
    {
        "problem": "Как работать с массивами в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "массивы (Arrays)",
            "структуры данных"
        ]
    },
    {
        "problem": "Опишите различные методы работы со строками в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "строки",
            "интерполяция строк"
        ]
    },
    {
        "problem": "Объясните, как работают хэши в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "структуры данных"
        ]
    },
    {
        "problem": "Как работают диапазоны (ranges) в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "диапазоны (Ranges)",
            "структуры данных"
        ]
    },
    {
        "problem": "Каково назначение методов Enumerable?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Как реализовать связный список в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "структуры данных",
            "алгоритмы"
        ]
    },
    {
        "problem": "Обсудите способы поиска данных в массиве или хэше.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "массивы (Arrays)",
            "хеши (Hashes)",
            "алгоритмы"
        ]
    },
    {
        "problem": "Как можно сортировать массивы и хэши?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "массивы (Arrays)",
            "хеши (Hashes)",
            "алгоритмы"
        ]
    },
    {
        "problem": "Опишите использование управляющих структур 'if-else' в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "условия if/else",
            "типы данных"
        ]
    },
    {
        "problem": "Какие конструкции циклов есть в Ruby и как они работают?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "циклы (while, until, for)",
            "итераторы"
        ]
    },
    {
        "problem": "Объясните разницу между циклами 'for' и итераторами 'each'.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "циклы (while, until, for)",
            "итераторы",
            "массивы (Arrays)"
        ]
    },
    {
        "problem": "Чем 'next' отличается от 'break' в цикле?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "break/next",
            "циклы (while, until, for)",
            "ключевые слова"
        ]
    },
    {
        "problem": "Что такое блок в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Как передать блок методу?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки",
            "определение методов"
        ]
    },
    {
        "problem": "Как преобразовать блок в Proc?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "proc",
            "блоки"
        ]
    },
    {
        "problem": "Объясните понятие \"арность\" в контексте Proc и lambda.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "лямбда-выражения",
            "proc"
        ]
    },
    {
        "problem": "Что такое Ruby Gem и как его использовать?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "RubyGems.org",
            "директивы",
            "модули"
        ]
    },
    {
        "problem": "Объясните назначение RubyGems.org.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "RubyGems.org"
        ]
    },
    {
        "problem": "Как создать собственный Ruby Gem?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "RubyGems.org",
            "модули",
            "определение методов"
        ]
    },
    {
        "problem": "Что такое Bundler и как он работает?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Bundler",
            "управление зависимостями",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Опишите процесс управления зависимостями с помощью Bundler.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Bundler",
            "управление зависимостями"
        ]
    },
    {
        "problem": "Объясните, как создать новое приложение на Rails.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails"
        ]
    },
    {
        "problem": "Что такое ActiveRecord и как он работает?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ActiveRecord",
            "Ruby on Rails"
        ]
    },
    {
        "problem": "Что такое asset pipeline в Rails?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails"
        ]
    },
    {
        "problem": "Как обрабатываются маршруты (routes) в Rails?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails",
            "REST API"
        ]
    },
    {
        "problem": "Что такое миграции в Rails?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails",
            "ActiveRecord"
        ]
    },
    {
        "problem": "Как реализовать аутентификацию в Rails-приложении?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails",
            "аутентификация"
        ]
    },
    {
        "problem": "Объясните, что такое \"concern\" в Ruby on Rails.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails",
            "модули"
        ]
    },
    {
        "problem": "Как выполнить загрузку файлов в Rails?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails",
            "работа с файлами"
        ]
    },
    {
        "problem": "Что такое фильтры в контроллерах Rails?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails"
        ]
    },
    {
        "problem": "Как писать тесты в Ruby с помощью Minitest или RSpec?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "RSpec",
            "Minitest",
            "unit-тесты"
        ]
    },
    {
        "problem": "Объясните Behavior-Driven Development (BDD) в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "BDD",
            "RSpec"
        ]
    },
    {
        "problem": "Что такое Test-Driven Development (TDD) и как его применять в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "TDD",
            "unit-тесты"
        ]
    },
    {
        "problem": "Что такое Mock и как он используется в тестировании?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "моки",
            "unit-тесты"
        ]
    },
    {
        "problem": "Опишите разницу между модульными и интеграционными тестами.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "unit-тесты",
            "интеграционные тесты"
        ]
    },
    {
        "problem": "Как оптимизировать код на Ruby для лучшей производительности?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "оптимизация"
        ]
    },
    {
        "problem": "Какие есть лучшие практики написания чистого и поддерживаемого кода на Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "стиль кода"
        ]
    },
    {
        "problem": "Как управлять разными версиями Ruby на одной системе?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "директивы"
        ]
    },
    {
        "problem": "Что такое парное программирование и как оно сочетается с разработкой на Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "стиль кода"
        ]
    },
    {
        "problem": "Объясните, как работает конкурентность в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "многопоточность",
            "конкурентность"
        ]
    },
    {
        "problem": "Что такое Global Interpreter Lock (GIL) в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "GIL",
            "многопоточность"
        ]
    },
    {
        "problem": "Как работают потоки в Ruby и когда их следует использовать?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "потоки (Threads)",
            "многопоточность"
        ]
    },
    {
        "problem": "Что такое событийно-ориентированное программирование и как его реализовать в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "алгоритмы",
            "событийное программирование"
        ]
    },
    {
        "problem": "Объясните модель памяти Ruby и как она влияет на производительность.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "оптимизация"
        ]
    },
    {
        "problem": "Как Ruby обрабатывает monkey patching и каковы его потенциальные проблемы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как Ruby взаимодействует с веб-фреймворками, такими как Rails или Sinatra?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails",
            "Sinatra",
            "веб-фреймворки"
        ]
    },
    {
        "problem": "Что такое Rack в контексте веб-разработки на Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Rack",
            "веб-фреймворки"
        ]
    },
    {
        "problem": "Опишите роль WebSockets в Ruby-приложении.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "WebSockets",
            "работа с сетью"
        ]
    },
    {
        "problem": "Как обрабатывать данные форм в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "REST API",
            "WebSockets",
            "работа с сетью"
        ]
    },
    {
        "problem": "Объясните шаблон Model-View-Controller (MVC) и как Ruby вписывается в эту модель.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Ruby on Rails",
            "MVC"
        ]
    },
    {
        "problem": "Что такое рефлексия в Ruby и как ее использовать?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как Ruby обрабатывает динамический вызов методов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "send",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Опишите, как использовать method_missing для обработки неопределенных методов.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "method_missing",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Объясните использование OpenStruct в отличие от Hash.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "структуры (Struct)",
            "хеши (Hashes)"
        ]
    },
    {
        "problem": "Что такое метаклассы в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метаклассы",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Как используется операция 'fork' в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "процессы",
            "системные вызовы"
        ]
    },
    {
        "problem": "Объясните разницу между конкурентностью и параллелизмом.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "конкурентность",
            "многопоточность"
        ]
    },
    {
        "problem": "Что такое мьютексы и как они работают в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Mutex",
            "многопоточность"
        ]
    },
    {
        "problem": "Обсудите поддержку асинхронного ввода-вывода в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "IO",
            "асинхронность"
        ]
    },
    {
        "problem": "Как открыть и читать из сокетов в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "сокеты",
            "работа с сетью"
        ]
    },
    {
        "problem": "Как Ruby поддерживает HTTP-операции?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "HTTP-запросы",
            "работа с сетью"
        ]
    },
    {
        "problem": "Опишите, как создать простой сервер на Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "работа с сетью",
            "сервер"
        ]
    },
    {
        "problem": "Как выполнять операции файлового ввода-вывода в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "работа с файлами",
            "IO"
        ]
    },
    {
        "problem": "Какие есть режимы файлового ввода-вывода в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "работа с файлами",
            "IO"
        ]
    },
    {
        "problem": "Как перемещаться по каталогам и обрабатывать файлы в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "работа с файлами",
            "Dir"
        ]
    },
    {
        "problem": "Как выполнять системные команды из Ruby-скриптов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "системные вызовы"
        ]
    },
    {
        "problem": "Какие возможности Ruby есть для задач системного администрирования?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "системные вызовы",
            "работа с файлами"
        ]
    },
    {
        "problem": "Объясните использование переменных окружения в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные",
            "ENV"
        ]
    },
    {
        "problem": "Опишите поддержку Unicode и кодировок символов в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "строки",
            "кодировки"
        ]
    },
    {
        "problem": "Как установить соединение с реляционной базой данных в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "PostgreSQL",
            "MySQL",
            "SQLite",
            "работа с сетью"
        ]
    },
    {
        "problem": "Объясните ORM в контексте Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ActiveRecord",
            "ORM"
        ]
    },
    {
        "problem": "Что такое миграции базы данных и как ими управлять в контексте Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ActiveRecord",
            "миграции",
            "Ruby on Rails"
        ]
    },
    {
        "problem": "Является ли все в Ruby объектом?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "ООП в Ruby"
        ]
    },
    {
        "problem": "Что можно сказать об идентификаторе, начинающемся с заглавной буквы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "константы",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое DSL и как это относится к Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "DSL",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Что такое утиная типизация и как она относится к Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "утиная типизация",
            "типы данных"
        ]
    },
    {
        "problem": "Является ли Ruby статически или динамически типизированным языком?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "типы данных"
        ]
    },
    {
        "problem": "Является ли Ruby строго или слабо типизированным языком?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "типы данных"
        ]
    },
    {
        "problem": "Что значит привести объект? Зачем это делать?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "преобразование типов"
        ]
    },
    {
        "problem": "В чем разница между инструкцией и выражением в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Почему стоит избегать использования строковых литералов в циклах?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "оптимизация",
            "строки"
        ]
    },
    {
        "problem": "Включает ли String модуль Enumerable?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "строки",
            "Enumerable"
        ]
    },
    {
        "problem": "Какой метод можно использовать для перебора строки?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "строки",
            "итераторы"
        ]
    },
    {
        "problem": "Почему символы обычно используются как ключи хэша вместо строк?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "символы (Symbols)",
            "хеши (Hashes)"
        ]
    },
    {
        "problem": "Какой суперкласс у Integer?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "типы данных"
        ]
    },
    {
        "problem": "Какой числовой класс можно использовать, чтобы избежать ошибок округления при использовании двоичной арифметики с плавающей точкой?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "типы данных",
            "оптимизация"
        ]
    },
    {
        "problem": "Чем отличается синтаксис %W от %w?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "массивы (Arrays)",
            "строки",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Использует ли Hash #== или #eql? для сравнения ключей хэша?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "структуры данных"
        ]
    },
    {
        "problem": "В каком порядке перебираются значения хэша?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "итераторы"
        ]
    },
    {
        "problem": "Какой синоним у Hash#[]=?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)"
        ]
    },
    {
        "problem": "Почему стоит использовать Hash#fetch вместо Hash#[] при запросе значений из хэша?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "обработка исключений"
        ]
    },
    {
        "problem": "Когда нужно использовать Hash#rehash?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)"
        ]
    },
    {
        "problem": "Какие два применения у диапазонов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "диапазоны (Ranges)"
        ]
    },
    {
        "problem": "Как можно включить выражение в литерал Regexp?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "регулярные выражения",
            "строки"
        ]
    },
    {
        "problem": "Какая глобальная переменная содержит последнее совпадение Regexp?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "регулярные выражения"
        ]
    },
    {
        "problem": "Какие два применения у оператора splat?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аргументы методов",
            "списки"
        ]
    },
    {
        "problem": "Какой оператор принимает три операнда?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "тернарный оператор",
            "операторы"
        ]
    },
    {
        "problem": "Какой оператор должен быть определен для реализации модуля Comparable?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Comparable",
            "перегрузка операторов"
        ]
    },
    {
        "problem": "В чем разница между #== и #equal??",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "В чем разница между #== и #===?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы"
        ]
    },
    {
        "problem": "В чем разница между #== и #eql??",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы"
        ]
    },
    {
        "problem": "Что имеет более высокий приоритет: && или and?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы"
        ]
    },
    {
        "problem": "Что имеет более высокий приоритет: && или =?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы"
        ]
    },
    {
        "problem": "Что имеет более высокий приоритет: and или =?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы"
        ]
    },
    {
        "problem": "Что имеет более высокий приоритет: && или ||?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы"
        ]
    },
    {
        "problem": "Что такое модификатор инструкции?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Создает ли блок while новую область видимости?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "циклы (while, until, for)",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Имеет ли case-инструкция в Ruby сквозное поведение?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "case/when"
        ]
    },
    {
        "problem": "В чем разница между throw/catch и raise/rescue?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "catch/throw",
            "raise/rescue",
            "обработка исключений"
        ]
    },
    {
        "problem": "Создает ли блок rescue новую область видимости?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "обработка исключений",
            "raise/rescue"
        ]
    },
    {
        "problem": "Какие преимущества у case-инструкции по сравнению с повторяющимися elsif?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "case/when",
            "условия if/else"
        ]
    },
    {
        "problem": "Какие недостатки у case-инструкции по сравнению с повторяющимися elsif?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "case/when",
            "условия if/else"
        ]
    },
    {
        "problem": "Назовите хотя бы два класса, которые включают модуль Enumerable.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Когда стоит использовать синтаксис do/end вместо фигурных скобок для блока?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Как определить локальные переменные блока в списке параметров блока?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки",
            "переменные"
        ]
    },
    {
        "problem": "Какой синоним у Enumerable#include??",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Можно ли изменять коллекцию во время итерации?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "итераторы",
            "массивы (Arrays)",
            "хеши (Hashes)"
        ]
    },
    {
        "problem": "Является ли блок объектом?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки"
        ]
    },
    {
        "problem": "Какой синоним у Enumerable#collect?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Какой синоним у Enumerable#find?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Какой синоним у Enumerable#select?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Что противоположно Enumerable#select?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Какой синоним у Enumerable#inject?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Почему стоит использовать #each вместо for/in?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "итераторы",
            "циклы (while, until, for)"
        ]
    },
    {
        "problem": "Что происходит, если блоку передается два аргумента, но он принимает только один?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки"
        ]
    },
    {
        "problem": "Почему блок анонимный?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки"
        ]
    },
    {
        "problem": "Чем отличается вызов блока от вызова метода?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки",
            "определение методов"
        ]
    },
    {
        "problem": "Как проверить наличие метода?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия"
        ]
    },
    {
        "problem": "Что означает self?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ключевые слова"
        ]
    },
    {
        "problem": "Что означает восклицательный знак ! в конце имени метода?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Что такое метод-мутатор?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аксессоры (getters/setters)"
        ]
    },
    {
        "problem": "Является ли метод объектом?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия"
        ]
    },
    {
        "problem": "Что такое предикат в контексте именования методов в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "определение методов"
        ]
    },
    {
        "problem": "Являются ли методы экземпляра публичными или приватными?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Когда стоит явно использовать return?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "возвращаемые значения"
        ]
    },
    {
        "problem": "Зачем может понадобиться создавать псевдонимы методов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как отправить сообщение приватному методу объекта извне его области видимости?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "send",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Чем отличается вызов приватного метода от вызова публичного метода внутри его класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Могут ли имена методов быть с заглавной буквы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "В чем разница между приватными и защищенными методами?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Чем отличается return внутри метода от return внутри блока?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "возвращаемые значения",
            "блоки"
        ]
    },
    {
        "problem": "Являются ли методы класса публичными или приватными?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Возвращает ли метод значение, если он не содержит выражения?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "возвращаемые значения"
        ]
    },
    {
        "problem": "Каково происхождение \"ключевых слов\" public, private и protected?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ключевые слова",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Как определить приватный метод класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Назовите хотя бы два способа отключить методы.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метапрограммирование"
        ]
    },
    {
        "problem": "В чем разница между Module#remove_method и Module#undef_method?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как синтаксис Ruby поддерживает именованные аргументы в списках параметров?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аргументы методов",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Когда может возникнуть LocalJumpError?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "обработка исключений"
        ]
    },
    {
        "problem": "Связывание замыкания с переменными называется динамическим. Что это значит?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Можно ли изменить замыкание?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Что нужно сделать перед вызовом объекта UnboundMethod?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия"
        ]
    },
    {
        "problem": "Являются ли объекты методов замыканиями?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Как получить объект Method из существующего модуля/класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия"
        ]
    },
    {
        "problem": "Как получить объект UnboundMethod из существующего модуля/класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия"
        ]
    },
    {
        "problem": "Что произойдет, если попытаться определить константу в классе извне класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "константы"
        ]
    },
    {
        "problem": "Что происходит с константой, которой не присвоено значение?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "константы"
        ]
    },
    {
        "problem": "Почему имя класса должно начинаться с заглавной буквы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Является ли #initialize методом экземпляра или методом класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "initialize",
            "классы и объекты"
        ]
    },
    {
        "problem": "В чем разница между переменной класса и переменной экземпляра класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные"
        ]
    },
    {
        "problem": "Что такое одиночка (singleton)?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы"
        ]
    },
    {
        "problem": "Как можно создать одиночку?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "классы и объекты"
        ]
    },
    {
        "problem": "Можно ли определить методы доступа для переменных экземпляра класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аксессоры (getters/setters)"
        ]
    },
    {
        "problem": "Можно ли вкладывать классы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты"
        ]
    },
    {
        "problem": "Является ли #initialize публичным или приватным?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "initialize",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Что делает Class#allocate?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое eigenclass?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метаклассы",
            "синглтон-классы"
        ]
    },
    {
        "problem": "Какая связь между методами-одиночками и методами класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что такое Class::new?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты"
        ]
    },
    {
        "problem": "Если класс B вложен в класс A, и в классе A есть метод класса, будет ли у класса B доступ к этому методу экземпляра класса A?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование",
            "классы и объекты"
        ]
    },
    {
        "problem": "Наследуются ли eigenclass?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метаклассы"
        ]
    },
    {
        "problem": "Что происходит с возвращаемым значением #initialize?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "initialize",
            "возвращаемые значения"
        ]
    },
    {
        "problem": "Что такое фабричный метод?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "определение методов",
            "паттерны проектирования"
        ]
    },
    {
        "problem": "Какой метод выполняет код инициализации для скопированных экземпляров объекта?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "initialize",
            "классы и объекты"
        ]
    },
    {
        "problem": "Переопределяет ли #initialize_copy #initialize?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "initialize",
            "переопределение методов"
        ]
    },
    {
        "problem": "В чем разница между Object#dup и #clone?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Какие две основные функции у модулей?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули"
        ]
    },
    {
        "problem": "Можно ли наследовать модуль?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули"
        ]
    },
    {
        "problem": "Что происходит, когда класс включает модуль?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули",
            "миксины (Mixins)"
        ]
    },
    {
        "problem": "Что происходит, когда объект расширяет модуль?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули",
            "миксины (Mixins)"
        ]
    },
    {
        "problem": "Какой суперкласс у Class?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "наследование"
        ]
    },
    {
        "problem": "Почему имена модулей должны начинаться с заглавной буквы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Как проверить, включен ли модуль в объект?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули",
            "рефлексия"
        ]
    },
    {
        "problem": "Что делает Module#module_function?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули методов",
            "модули"
        ]
    },
    {
        "problem": "Что такое Struct в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "структуры (Struct)"
        ]
    },
    {
        "problem": "Можно ли добавлять методы в Struct?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "структуры (Struct)",
            "определение методов"
        ]
    },
    {
        "problem": "В чем разница между Object#is_a? и Object#instance_of??",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "наследование",
            "полиморфизм"
        ]
    },
    {
        "problem": "Если super используется в методе без аргументов, какие аргументы передаются методу суперкласса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование",
            "аргументы методов",
            "возвращаемые значения"
        ]
    },
    {
        "problem": "Наследуются ли методы-одиночки?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "наследование"
        ]
    },
    {
        "problem": "Наследуются ли методы класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "наследование"
        ]
    },
    {
        "problem": "Наследуются ли константы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "константы",
            "наследование"
        ]
    },
    {
        "problem": "Наследуются ли переменные класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные",
            "наследование"
        ]
    },
    {
        "problem": "На что стоит обратить внимание при наследовании от неизвестного класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Как предотвратить наследование метода суперкласса подклассом?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция",
            "наследование"
        ]
    },
    {
        "problem": "Можно ли считать Module#attr_reader примером метапрограммирования?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аксессоры (getters/setters)",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как получить доступ к переменной экземпляра объекта извне его области видимости?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция",
            "переменные"
        ]
    },
    {
        "problem": "Какой метод вызывается, когда метод не найден?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "method_missing",
            "рефлексия"
        ]
    },
    {
        "problem": "Как открыть eigenclass из его ассоциированного класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "метаклассы"
        ]
    },
    {
        "problem": "Что такое binding?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Какой метод вызывается, когда константа не найдена?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "константы",
            "рефлексия"
        ]
    },
    {
        "problem": "Сколько и каких аргументов принимает Module#define_method?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "define_method",
            "определение методов",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Может ли #eval принимать блок?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "eval",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как получить ссылку на eigenclass из его ассоциированного класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "метаклассы"
        ]
    },
    {
        "problem": "В чем разница между BasicObject#instance_eval и BasicObject#instance_exec?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "instance_eval",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Где находятся #class_variable_get и #class_variable_set в объектной модели?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные",
            "рефлексия"
        ]
    },
    {
        "problem": "Где находятся #instance_variable_get и #instance_variable_set в объектной модели?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные",
            "рефлексия"
        ]
    },
    {
        "problem": "Где находятся #local_variables и #global_variables в объектной модели?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "переменные"
        ]
    },
    {
        "problem": "Что такое $LOAD_PATH?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные"
        ]
    },
    {
        "problem": "В чем разница между Kernel#require и Kernel#load?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel",
            "директивы"
        ]
    },
    {
        "problem": "Имеет ли файл, загруженный через Kernel#require или Kernel#load, доступ к локальным переменным вызывающего файла?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel",
            "директивы",
            "области видимости"
        ]
    },
    {
        "problem": "В чем разница между Kernel#require и Kernel#require_relative?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel",
            "директивы"
        ]
    },
    {
        "problem": "Что делает Kernel#autoload?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel",
            "директивы"
        ]
    },
    {
        "problem": "Что делает File::expand_path?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "File",
            "работа с файлами"
        ]
    },
    {
        "problem": "Что такое объект IO?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "IO",
            "работа с файлами"
        ]
    },
    {
        "problem": "Включены ли каталоги установки RubyGems в $LOAD_PATH?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "гемы"
        ]
    },
    {
        "problem": "Если установлено несколько версий Gem, какая версия будет использоваться?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "гемы",
            "RubyGems"
        ]
    },
    {
        "problem": "Какой уровень $SAFE по умолчанию?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "$SAFE"
        ]
    },
    {
        "problem": "Что происходит при попытке понизить уровень $SAFE?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "$SAFE"
        ]
    },
    {
        "problem": "В чем разница между taint и trust?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "безопасность"
        ]
    },
    {
        "problem": "Какая ошибка возникает, если методу передано неверное количество аргументов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ошибки",
            "обработка исключений"
        ]
    },
    {
        "problem": "Какая ошибка возникает, если разрешение имени метода не удалось?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ошибки",
            "обработка исключений"
        ]
    },
    {
        "problem": "Суперкласс StandardError - это __.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "обработка исключений",
            "Exception класс"
        ]
    },
    {
        "problem": "Что делает реализация BasicObject#method_missing по умолчанию?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "method_missing",
            "рефлексия"
        ]
    },
    {
        "problem": "Что произойдет при попытке переопределить BasicObject#__send__?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "send",
            "метапрограммирование"
        ]
    },
    {
        "problem": "В чем разница между #to_s и #inspect?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "определение методов",
            "типы данных"
        ]
    },
    {
        "problem": "В чем разница между #puts и #p?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ввод и вывод"
        ]
    },
    {
        "problem": "Какая глобальная переменная содержит последнее возникшее исключение?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "обработка исключений"
        ]
    },
    {
        "problem": "Как получить текущее состояние стека вызовов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия",
            "Kernel"
        ]
    },
    {
        "problem": "Что возвращает Kernel#__method__?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel",
            "рефлексия"
        ]
    },
    {
        "problem": "Какой синоним у Kernel#__method__?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel",
            "рефлексия"
        ]
    },
    {
        "problem": "В чем разница между #puts и #print?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ввод и вывод"
        ]
    },
    {
        "problem": "Какой параметр интерпретатора Ruby позволяет выполнять однострочные скрипты?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "директивы",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Какая кодировка по умолчанию в MRI?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "строки"
        ]
    },
    {
        "problem": "Как Ruby понимает, что в выражении x.field = [] должен вызываться метод-сеттер типа X#[]=?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аксессоры (getters/setters)",
            "операторы"
        ]
    },
    {
        "problem": "Какая глобальная константа содержит аргументы командной строки?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "константы",
            "глобальные переменные"
        ]
    },
    {
        "problem": "Какой параметр интерпретатора Ruby включает предупреждения об устаревшем или проблемном коде?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "директивы",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Какой модуль в стандартной библиотеке предоставляет английские альтернативы кратким глобальным переменным?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "English",
            "глобальные переменные"
        ]
    },
    {
        "problem": "Как определить класс в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Объясните разницу между nil и false в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "типы данных",
            "логические значения"
        ]
    },
    {
        "problem": "Как определить метод в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "определение методов",
            "аргументы методов"
        ]
    },
    {
        "problem": "Объясните концепцию модулей в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули"
        ]
    },
    {
        "problem": "Как обрабатывать исключения в Ruby? Приведите пример.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "обработка исключений",
            "raise/rescue"
        ]
    },
    {
        "problem": "В чем разница между puts, print и p в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ввод и вывод"
        ]
    },
    {
        "problem": "Как перебирать массив в Ruby? Приведите пример.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "массивы (Arrays)",
            "итераторы"
        ]
    },
    {
        "problem": "Что такое символы в Ruby? Приведите пример.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "символы (Symbols)",
            "типы данных"
        ]
    },
    {
        "problem": "Объясните концепцию блоков в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки",
            "итераторы"
        ]
    },
    {
        "problem": "Как определить хэш в Ruby? Приведите пример.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)"
        ]
    },
    {
        "problem": "Как выполнять файловые операции в Ruby? Приведите пример чтения файла.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "работа с файлами",
            "File",
            "IO"
        ]
    },
    {
        "problem": "В чем разница между вызовом super и super()?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование",
            "аргументы методов"
        ]
    },
    {
        "problem": "Чему будут равны val1 и val2 после выполнения кода? Объясните ответ.",
        "code_snippet": "val1 = true and false\nval2 = true && false",
        "tags": [
            "Ruby",
            "операторы",
            "типы данных"
        ]
    },
    {
        "problem": "Какие из выражений ниже вернут \"false\"?",
        "code_snippet": "true    ? \"true\" : \"false\"\nfalse   ? \"true\" : \"false\"\nnil     ? \"true\" : \"false\"\n1       ? \"true\" : \"false\"\n0       ? \"true\" : \"false\"\n\"false\" ? \"true\" : \"false\"\n\"\"      ? \"true\" : \"false\"\n[]      ? \"true\" : \"false\"",
        "tags": [
            "Ruby",
            "типы данных",
            "логические значения"
        ]
    },
    {
        "problem": "Напишите функцию, которая сортирует ключи хэша по длине ключа в виде строки.",
        "code_snippet": "{ abc: 'hello', 'another_key' => 123, 4567 => 'third' }",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "алгоритмы"
        ]
    },
    {
        "problem": "Что вернет каждый из следующих вызовов методов?",
        "code_snippet": "def times_two(arg1);\n  puts arg1 * 2;\nend\n\ndef sum(arg1, arg2);\n  puts arg1 + arg2;\nend\n\ntimes_two 5\ntimes_two(5)\ntimes_two (5)\nsum 1, 2\nsum(1, 2)\nsum (1, 2)",
        "tags": [
            "Ruby",
            "аргументы методов",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Какие значения вернут вызовы методов value1 и value2? Объясните ответ.",
        "code_snippet": "VAL = 'Global'\n \nmodule Foo\n  VAL = 'Foo Local'\n \n  class Bar\n    def value1\n      VAL\n    end\n  end\nend\n \nclass Foo::Bar\n  def value2\n    VAL\n  end\nend\n\nFoo::Bar.new.value1\nFoo::Bar.new.value2",
        "tags": [
            "Ruby",
            "константы",
            "наследование"
        ]
    },
    {
        "problem": "Является ли следующая строка валидным Ruby кодом? Если да, что она делает?",
        "code_snippet": "-> (a) {p a}[\"Hello world\"]",
        "tags": [
            "Ruby",
            "лямбда-выражения",
            "строки"
        ]
    },
    {
        "problem": "Объясните назначение операторов: ==, ===, eql?, equal? и когда их следует использовать.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "операторы",
            "типы данных"
        ]
    },
    {
        "problem": "Объясните разницу между операциями:",
        "code_snippet": "x = \"hello\"\nx += \" world\"\n\nx.concat \" world\"",
        "tags": [
            "Ruby",
            "строки",
            "типы данных"
        ]
    },
    {
        "problem": "Как работает сокращенная запись array.map(&:method_name) в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "масcивы (Arrays)",
            "итераторы",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Напишите одну строку Ruby кода, которая выводит последовательность Фибоначчи любой длины в виде массива.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "алгоритмы",
            "масcивы (Arrays)"
        ]
    },
    {
        "problem": "Можно ли вызвать приватный метод вне класса Ruby используя его объект?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Какие значения будут у переменных var1 и var2?",
        "code_snippet": "class A\n  def self.a(b)\n    if b > 0\n      b * b\n    end\n  end\nend\n\nvar1 = A.a(0)\nvar2 = A.a(2)",
        "tags": [
            "Ruby",
            "определение методов",
            "возвращаемые значения"
        ]
    },
    {
        "problem": "В чем разница между Array#map и Array#each?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "масcивы (Arrays)",
            "итераторы"
        ]
    },
    {
        "problem": "Как удалить nil значения из массива в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "масcивы (Arrays)",
            "алгоритмы"
        ]
    },
    {
        "problem": "Каков результат вызовов для класса ABC?",
        "code_snippet": "class ABC\n  def xyz\n    puts \"xyz in ABC\"\n  end\nend\n\nABC::new::xyz\nABC::new.xyz\nABC.new::xyz\nABC.new.xyz",
        "tags": [
            "Ruby",
            "определение методов",
            "классы и объекты"
        ]
    },
    {
        "problem": "Какое значение будет у переменной upcased?",
        "code_snippet": "upcased = [\"one\", \"two\", \"three\"].map {|n| puts n.upcase }",
        "tags": [
            "Ruby",
            "масcивы (Arrays)",
            "определение методов"
        ]
    },
    {
        "problem": "Какие значения вернут выражения?",
        "code_snippet": "if false\n  foo = 'test'\nend\n\ndefined? foo\ndefined? bar",
        "tags": [
            "Ruby",
            "условия if/else",
            "переменные"
        ]
    },
    {
        "problem": "В чем разница между методами clone и dup у объектов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "копирование",
            "заморозка объектов"
        ]
    },
    {
        "problem": "В чем разница между extend и include в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "миксины (Mixins)",
            "модули"
        ]
    },
    {
        "problem": "Какие типы переменных используются в Ruby и что они из себя представляют?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные",
            "типы данных"
        ]
    },
    {
        "problem": "Какой самый высокий уровень в объектной модели Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "классы и объекты",
            "наследование"
        ]
    },
    {
        "problem": "Какой объект включает модуль Kernel?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel",
            "модули"
        ]
    },
    {
        "problem": "Что означает приведение объекта? Зачем это нужно?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "преобразование типов"
        ]
    },
    {
        "problem": "В чем разница между выражением и оператором в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby",
            "операторы"
        ]
    },
    {
        "problem": "В чем разница между символьным литералом ?A и строковым литералом \"A\"?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "литералы",
            "символы (Symbols)",
            "строки"
        ]
    },
    {
        "problem": "Назовите другой неизменяемый объект в Ruby, кроме Symbol.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "символы (Symbols)",
            "типы данных"
        ]
    },
    {
        "problem": "Что происходит, когда значение становится слишком большим для Fixnum?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "типы данных"
        ]
    },
    {
        "problem": "Какой суперкласс у Fixnum?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "типы данных",
            "наследование"
        ]
    },
    {
        "problem": "Назовите хотя бы один синоним для Hash#key?.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "Enumerable"
        ]
    },
    {
        "problem": "Как можно указать значение по умолчанию для хэша?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)"
        ]
    },
    {
        "problem": "Почему можно безопасно использовать строку как ключ хэша, несмотря на то что строка изменяема?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "строки"
        ]
    },
    {
        "problem": "Назовите два способа использования диапазонов (Range).",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "диапазоны (Ranges)",
            "типы данных"
        ]
    },
    {
        "problem": "Как можно включить выражение в регулярное выражение?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "регулярные выражения",
            "Pattern Matching"
        ]
    },
    {
        "problem": "Какая глобальная переменная содержит последнее совпадение регулярного выражения?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "MatchData"
        ]
    },
    {
        "problem": "Назовите два способа использования оператора splat (*).",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аргументы методов",
            "типы данных",
            "операторы"
        ]
    },
    {
        "problem": "Какой единственный оператор принимает три операнда?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "тернарный оператор",
            "операторы"
        ]
    },
    {
        "problem": "Что такое модификатор выражения?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Имеет ли case-выражение в Ruby поведение \"проваливания\" (fall-through)?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "case/when"
        ]
    },
    {
        "problem": "Какие преимущества case-выражения по сравнению с несколькими elsif?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "case/when",
            "условия if/else"
        ]
    },
    {
        "problem": "Какие недостатки case-выражения по сравнению с несколькими elsif?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "case/when",
            "условия if/else"
        ]
    },
    {
        "problem": "Какой метод противоположен Enumerable#select?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Enumerable"
        ]
    },
    {
        "problem": "Почему лучше использовать #each вместо for/in?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "итераторы",
            "циклы (while, until, for)"
        ]
    },
    {
        "problem": "Как проверить наличие метода у объекта?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Что такое предикат в контексте соглашений об именовании методов в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "определение методов",
            "соглашения об именовании"
        ]
    },
    {
        "problem": "Когда следует явно использовать return?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "возвращаемые значения",
            "определение методов"
        ]
    },
    {
        "problem": "Зачем создавать псевдонимы методов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как вызвать приватный метод объекта извне его области видимости?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "метапрограммирование",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Как обычно предотвращают модификацию объекта?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "заморозка объектов"
        ]
    },
    {
        "problem": "Могут ли имена методов начинаться с заглавной буквы?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Где находится метод, объявленный вне класса или модуля на верхнем уровне?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Kernel"
        ]
    },
    {
        "problem": "Откуда происходят \"ключевые слова\" public, private и protected?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "ключевые слова",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Какие два вида объектов Proc существуют?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "proc",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Что можно сказать об аргументе метода, перед которым стоит &?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "аргументы методов",
            "лямбда-выражения",
            "блоки"
        ]
    },
    {
        "problem": "В чем основное различие между proc и lambda?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "proc",
            "лямбда-выражения"
        ]
    },
    {
        "problem": "Должен ли объект быть объектом Proc, чтобы перед ним можно было поставить & в списке параметров?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "proc",
            "лямбда-выражения",
            "аргументы методов"
        ]
    },
    {
        "problem": "Опишите замыкание (closure) в Ruby.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "блоки",
            "замыкание",
            "лямбда-выражения",
            "proc"
        ]
    },
    {
        "problem": "Сохраняет ли замыкание переменные по значению или по ссылке?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "замыкание"
        ]
    },
    {
        "problem": "Являются ли объекты Method замыканиями?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "замыкание",
            "определение методов"
        ]
    },
    {
        "problem": "Как создать одиночку?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "паттерны проектирования"
        ]
    },
    {
        "problem": "Если класс B вложен в класс A, и в A есть метод класса, будет ли у B доступ к этому методу?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование",
            "области видимости"
        ]
    },
    {
        "problem": "Какой метод выполняется при копировании объекта?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "копирование",
            "классы и объекты"
        ]
    },
    {
        "problem": "Что означает, что Object#dup и #clone выполняют поверхностное копирование?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "копирование",
            "классы и объекты"
        ]
    },
    {
        "problem": "Назовите две основные функции модулей.",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "модули",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Если super используется в методе без аргументов, какие аргументы передадутся в метод родительского класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "наследование",
            "аргументы методов"
        ]
    },
    {
        "problem": "Почему следует избегать использования переменных класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "переменные",
            "инкапсуляция"
        ]
    },
    {
        "problem": "Как предотвратить наследование метода родительского класса дочерним классом?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция",
            "наследование"
        ]
    },
    {
        "problem": "Как открыть eigenclass изнутри связанного класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "метаклассы"
        ]
    },
    {
        "problem": "Что такое API рефлексии в Ruby?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "рефлексия",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Как получить ссылку на eigenclass изнутри связанного класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "синглтон-классы",
            "метаклассы"
        ]
    },
    {
        "problem": "Как изменить видимость метода вне определения класса?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "инкапсуляция",
            "рефлексия"
        ]
    },
    {
        "problem": "Какие методы класса Dir можно использовать для получения содержимого директории?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Dir",
            "работа с файлами"
        ]
    },
    {
        "problem": "Включены ли директории установки RubyGems в $LOAD_PATH?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "RubyGems"
        ]
    },
    {
        "problem": "Что можно сказать об объектах, производных от \"загрязненных\" (tainted) объектов?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "безопасность"
        ]
    },
    {
        "problem": "Каков уровень $SAFE по умолчанию?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "глобальные переменные",
            "$SAFE"
        ]
    },
    {
        "problem": "Какой суперкласс у StandardError?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "Exception класс",
            "обработка исключений"
        ]
    },
    {
        "problem": "Что произойдет, если попытаться переопределить BasicObject#__send__?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "send",
            "метапрограммирование"
        ]
    },
    {
        "problem": "Какой параметр интерпретатора Ruby включает режим отладки?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "директивы",
            "синтаксис Ruby"
        ]
    },
    {
        "problem": "Где в объектной модели находятся фигурные скобки {} для определения хэш-литерала?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "хеши (Hashes)",
            "литералы"
        ]
    },
    {
        "problem": "Какие объекты в MRI не подвергаются сборке мусора?",
        "code_snippet": "",
        "tags": [
            "Ruby",
            "GC",
            "типы данных"
        ]
    }
]